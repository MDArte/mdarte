#if(!$entity.subentity)
#if($auditoria)
#set ($generatedFile = "${entity.packagePath}/${entity.entityName}LogRec.java")
#else
#set ($generatedFile = "${entity.packagePath}/${entity.entityImplementationName}.java")
#end
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntityImpl.vsl in andromda-hibernate-cartridge.
//
#if ($stringUtils.isNotBlank($entity.packageName))
package $entity.packageName;
#end
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))

/**
 * @see $entity.fullyQualifiedEntityName
 */
    
public#if ($entity.abstract) abstract#end class #if($auditoria)${entity.entityName}LogRec #else $entity.entityImplementationName #end
    #if(!$auditoria)extends ${entity.fullyQualifiedEntityName}Abstract #else #if($entity.generalization) extends ${entity.generalization.fullyQualifiedName}LogRec #end #end #if($auditoria) implements ${customTypesPackage}.${modelPackageName}.Auditable#end
{
    /** 
     * The serial version UID of this class. Needed for serialization. 
     */
    private static final long serialVersionUID = ${entity.serialVersionUID}L;

    public #if($auditoria)${entity.entityName}LogRec#else$entity.entityImplementationName#end()  {

    }

#set ($typeTargetTO = $stringUtils.replace(${entity.fullyQualifiedName}, ".${modelPackageName}.", ".${transferPackageName}."))
#set ($identifiers = $entity.getIdentifiers(false))
#if(!$entity.abstract && $identifiers.size > 0)
    public ${entity.entityName}(){
       super();
    }

    #renderConstructorImplMethod($entity $entity.entityName $identifiers)
#end

#if($auditoria)
#foreach ( $attribute in $entity.attributes )
#set ($typeName = $attribute.type.fullyQualifiedName)
#if ($attribute.containsEmbeddedObject)
#set ($typeName = $attribute.type.fullyQualifiedEntityName)
#end
	private $typeName ${attribute.name};
	
	public void ${attribute.setterName}($typeName ${attribute.name}){
		this.${attribute.name} =  ${attribute.name};
	}
	
	public  $typeName ${attribute.getterName}(){
		return this.${attribute.name};
	}

#end
#else
#if($attribute.findTaggedValue($throwsVetoException).equals("true"))
#set($exceptionList = "java.beans.PropertyVetoException")
#end
#if($attribute.findTaggedValue($throwsVetoException).equals("true"))
	$attribute.visibility void ${attribute.setterName}(${typeName} $attribute.name) throws $exceptionList{
		
	}

#end
#end
#foreach ($associationEnd in $entity.associationEnds)
#set ($target = $associationEnd.otherEnd)
#if($auditoria && $target.navigable)
	private String ${target.name}Log = "";

	public void add${stringUtils.capitalize($target.name)}Log(String ${target.name}Log) {
		this.${target.name}Log +=  ${target.name}Log;
	}
	
	public void ${target.setterName}Log(String ${target.name}Log) {
		this.${target.name}Log =  ${target.name}Log;
	}
	
	public  String ${target.getterName}Log(){
		return this.${target.name}Log;
	}

#else
#if ($target.navigable || ($associationEnd.child && $entity.foreignHibernateGeneratorClass))
#if($target.findTaggedValue($throwsVetoException).equals("true"))
#set($exceptionList = "java.beans.PropertyVetoException")
#end
#if($target.findTaggedValue($throwsVetoException).equals("true"))
	
	public void ${target.setterName}($target.getterSetterTypeName ${target.name}) throws $exceptionList{
	
	}
#end
#end

#end
#end
#foreach ($operation in $entity.businessOperations)
#set ($returnType = $operation.returnType)
#set ($signature = $operation.signature)
#set ($listaAtributos = $operation.typedArgumentList)
#if($operation.findTaggedValue($daoMethod) && $operation.findTaggedValue($daoMethod).equals("false"))

#if ($operation.exceptionsPresent)
	protected $returnType.fullyQualifiedName handle${stringUtils.capitalize(${operation.name})} ($listaAtributos) throws $operation.exceptionList{
#else
	protected $returnType.fullyQualifiedName handle${stringUtils.capitalize(${operation.name})} ($listaAtributos){
#end
	
#if ($operation.returnTypePresent)
		return $operation.returnType.javaNullString;
#end
	}

#end
#end  
#if($auditoria)
	private int hibernate_version;
		
	public int getHibernate_version(){
		return this.hibernate_version;
	}
		
	private void setHibernate_version(int hibernate_version){
		this.hibernate_version = hibernate_version;
	}
		
	private java.lang.Long entityId;

    /**
     * 
     */
    public java.lang.Long getEntityId()
    {
        return this.entityId;
    }
    
	public void setEntityId(java.lang.Long entityId)
    {
		this.entityId = entityId;
    }

	private java.lang.Long version;

    /**
     * 
     */
    public java.lang.Long getVersion()
    {
        return this.version;
    }
    
	public void setVersion(java.lang.Long version)
    {
		this.version = version;
    }

	private java.lang.String hash;

    /**
     * 
     */
    public java.lang.String getHash()
    {
        return this.hash;
    }
    
	public void setHash(java.lang.String hash)
    {
		this.hash = hash;
    }

	private String auditoriaLogin;
	
	public String getAuditoriaLogin() {
		return this.auditoriaLogin;
	}

	public void setAuditoriaLogin(String auditoriaLogin) {
		this.auditoriaLogin = auditoriaLogin;
	}
	
	private String auditoriaOperacao;
	
	public String getAuditoriaOperacao() {
		return this.auditoriaOperacao;
	}
	
	public void setAuditoriaOperacao(String auditoriaOperacao) {
		this.auditoriaOperacao = auditoriaOperacao;
	}
	
	private java.util.Date auditoriaDataHora;
	
	public java.util.Date getAuditoriaDataHora() {
		return this.auditoriaDataHora;
	}
	
	public void setAuditoriaDataHora(java.util.Date auditoriaDataHora) {
		this.auditoriaDataHora = auditoriaDataHora;
	}

#end
#if($securityEnabled && $entity.hasExactStereotype("User"))
	public String getNomeIdentificadorMenu() {
		// TODO Auto-generated method stub
		return null;
	}

#end

}
#end