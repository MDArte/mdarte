#set ($generatedFile = "${stringUtils.replace($customTypesPackage,'.','/')}/${utilDir}/ExportExcel.java")

#set ($package = "${stringUtils.replace($utilDir,'/','.')}")
package ${customTypesPackage}.${package};

import org.hibernate.Criteria;
import org.hibernate.ScrollableResults;
import org.hibernate.ScrollMode;
import org.hibernate.type.Type;

import org.apache.poi.xssf.streaming.SXSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
//import org.apache.poi.xssf.usermodel.XSSFWorkbook;
//import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Cookie;

import javax.servlet.ServletOutputStream;

public abstract class ExportExcel {
	
	private Criteria criteria;
	
	private String sheetName;
	
	protected String[] columns;
	
	private ScrollableResults results = null;
	
	protected HashMap<String,XSSFCellStyle> styles = new HashMap<String,XSSFCellStyle> ();
	
	protected HttpServletRequest request;
	
	protected HttpServletResponse response;
	
	protected String errorMessage; 
	
	public ExportExcel(Criteria criteria, String sheetName, String[] columns, HttpServletRequest request, HttpServletResponse response) {
		this.criteria = criteria;
		this.sheetName = sheetName;
		this.columns = columns;
		this.request = request;
		this.response = response;
		this.errorMessage = "Erro ao exportar planilha " + sheetName+ " .";
	}
	
	public Type getColumnType(int i) {
		return results.getType(i);
	}
	
	public int getCurrentRowNumber() {
		return results.getRowNumber();
	}
	
	private void columnsAutoResize(XSSFSheet sheet){
		
		for(int i = 0; i < columns.length; i++) {
		
			sheet.autoSizeColumn(i);
		
		}
		
	}
	
	private void exportDatasheet(SXSSFWorkbook workbook) throws Exception {
		
		Cookie cookie = new Cookie("fimLoader", "fimLoader");
		
		cookie.setMaxAge(2);
		
		response.addCookie(cookie);
		response.setContentType("application/vnd.ms-excel");
		response.setHeader("Content-Disposition", "attachment;filename=\"" + sheetName + ".xlsx\"");
		
		try {
			
			ServletOutputStream out = response.getOutputStream();
			
			workbook.write(out);
			
			out.flush();
			
			//wb.dispose();
			
			//workbook.close();
			
		} catch(Exception exception) {
			
			throw new Exception(errorMessage, exception);
		
		}
		
	}
	
	public abstract void stylus(SXSSFWorkbook workbook);
	
	public abstract void header(SXSSFWorkbook workbook);
	
	public abstract void line(SXSSFWorkbook workbook,XSSFSheet sheet, Object[] row);
	
	public void run() throws Exception{
		
		SXSSFWorkbook workbook = new SXSSFWorkbook();
		
		XSSFSheet sheet = (XSSFSheet) workbook.createSheet(sheetName);
		
		stylus(workbook);
		
		header(workbook);
		
		if(criteria != null) {
			
			results = criteria.scroll(ScrollMode.FORWARD_ONLY);
			
		}
		
		if(results != null) {
			
			results.beforeFirst();
			
			while(results.next()) {
				
				line(workbook, sheet, results.get());
				
			}
			
		}
		
		columnsAutoResize(sheet);
		
		exportDatasheet(workbook);
		
	}
	
}