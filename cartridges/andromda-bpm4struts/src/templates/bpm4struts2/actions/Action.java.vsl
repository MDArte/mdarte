#parse("templates/bpm4struts/actions/Action.java.vm")
#set ($generatedFile = "${action.fullActionPath}.java")
##
##  CONSTANTS
##
#set ($controllerClass = $action.controller)
#set ($formBeanClassName = $action.formBeanClassName)
#set ($roles = $action.actionRoles)
#set ($resettableActionParameters = $action.resettableActionParameters)
#set ($actionForwards = $action.actionForwards)
#set ($actionExceptions = $action.actionExceptions)
#set ($actionStates = $action.actionStates)
#set ($decisionTransitions = $action.decisionTransitions)
#set ($security = $stringUtils.isNotBlank($securityRealm) && $stringUtils.isNotBlank($roles) )
##
##  MACROS
##
#macro (saveMessages $transition $indent)
#if (!$controllerClass.operations.isEmpty())
#if ($transition.successMessagesPresent)
#foreach ($message in $transition.successMessages.entrySet())
${indent}${controllerClass.fullyQualifiedName}Factory.get${controllerClass.name}Instance().saveSuccessMessage(request, "$message.key");
#end
#end
#if ($transition.warningMessagesPresent)
#foreach ($message in $transition.warningMessages.entrySet())
${indent}${controllerClass.fullyQualifiedName}Factory.get${controllerClass.name}Instance().saveWarningMessage(request, "$message.key");
#end
#end
#end
#end
##
## CHECK IF THE ACTION IS A STRUTS 2 ACTION
##
#set($gerar = true)
#if($action.actionOldStruts)
#set($gerar = false)
#end
##
##  START TEMPLATE
##
#if($gerar)
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: bpm4struts2/actions/Action.java.vsl in andromda-bpm4struts-cartridge-coppetec.
//

package $action.packageName;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts2.interceptor.ServletRequestAware;
import org.apache.struts2.interceptor.ServletResponseAware;
import org.apache.struts2.ServletActionContext;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Enumeration;
import java.io.PrintWriter;
import ${servletPackage}.ActionUtil;
import ${servletPackage}.Struts2ViewContainer;
#set ($package = "${stringUtils.replace($utilDir,'/','.')}")
import ${customTypesPackage}.${package}.Constantes;

import com.opensymphony.xwork2.ActionSupport;

#if (!$controllerClass.operations.isEmpty())
import ${controllerClass.fullyQualifiedName}Factory;
#end

#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#if ($securityEnabled && !${action.useCase.openAccess})
public class ${action.actionClassName} extends ${controleAcessoDir}.Login2
#else
public class ${action.actionClassName} extends ActionSupport implements ServletRequestAware, ServletResponseAware
#end
{
#if (!$securityEnabled || ${action.useCase.openAccess})
	private HttpServletResponse response;
	private HttpServletRequest request;

	public void setServletResponse(HttpServletResponse response)
	{
		this.response = response;
	}

	public void setServletRequest(HttpServletRequest request)
	{
		this.request = request;
	}

	protected String __casoDeUso = "${action.useCase.name}";
	protected String __urlCasoDeUso = "${action.actionPath}";
	protected String __modulo = "${action.useCase.package.webModuleName}";
	protected String __contexto = "$stringUtils.replaceOnce(${action.useCase.package.contexto}, ${contextoPrincipal}, "")";

#end
##
#foreach ($field in $action.actionFormFields)

#set ($fieldName = $field.name)
#set ($fieldType = $field.type.fullyQualifiedName)
#if ($field.file)
	private java.io.File $field.name = null;
	private java.lang.String ${field.name}FileName = null;
	private java.lang.String ${field.name}ContentType = null;
#elseif ($field.table)
	private $field.type.fullyQualifiedName $field.name;
#elseif ($field.strutsAction.tableAction)
	private java.util.List ${field.name}RowSelection;
#elseif ($field.type.mapType)
	private java.util.Map $field.name = new java.util.HashMap();
#elseif($field.widgetType=="money")
	private java.lang.String $field.name;
#elseif($field.widgetType=="multibox")
	private ${field.type.fullyQualifiedName}#if($field.type.enumeration)[]#end $field.name;
#elseif ($field.doubleSelect)
	private $field.type.fullyQualifiedName $field.name;
	private $field.type.fullyQualifiedName ${field.name}__Double;

	public ${field.type.fullyQualifiedName} ${field.getterName}__Double()
	{
		return ${fieldName}__Double;
	}

	public void ${field.setterName}__Double($fieldType ${fieldName}__Double)
	{
		this.${fieldName}__Double = ${fieldName}__Double;
	}

#else
	private $field.type.fullyQualifiedName $field.name;
#end
#if(${field.widgetType}=="select" || ${field.radioButton})
	public java.util.Map ${field.name}ComboList;
	public java.util.Map ${field.getterName}ComboList()
	{
		if(${field.name}ComboList==null)${field.name}ComboList=new java.util.HashMap();
		return ${field.name}ComboList;
	}
#end
#if(!($field.file))
#if($field.strutsAction.tableAction)
	public java.util.List ${field.getterName}RowSelection ()
#elseif($field.type.enumeration)
#set($enumeration = $field.type)
#if ($enumeration.literalType.primitive)
#set($literalType = $enumeration.literalType.wrapperName)
#else
#set($literalType = $enumeration.literalType.fullyQualifiedName)
#end
	public ${literalType}#if($field.widgetType == "multibox")[]#end ${field.getterName}() 
#else 
	public ${field.type.fullyQualifiedName} ${field.getterName}() 
#end
	{
#if($field.strutsAction.tableAction)
		return ${fieldName}RowSelection;
#elseif($field.type.enumeration)
#if($field.widgetType == "multibox")
		${literalType}[] result = new ${literalType}[${fieldName}.length];
	
		for (int i = 0; i < this.${fieldName}.length; i++) {
			result[i] = ${fieldName}[i].getValue();
		}
		
		return result;
#else
		return ${fieldName}.getValue();
#end
#else
		return ${fieldName};
#end
	}

#if(${field.type.fullyQualifiedName}=="java.util.Date")
	public void ${field.setterName}(String $fieldName)
	{
		java.text.DateFormat formatter = new java.text.SimpleDateFormat("dd/MM/yyyy");
		 if ($fieldName == null || ${fieldName}.trim().length() == 0)
			{
				this.${fieldName} = null;
			}
			else
			{
				try
				{
					this.${fieldName} = formatter.parse(${fieldName});
				}
				catch(java.text.ParseException e)
				{
					this.${fieldName} = null;
				}
			}
	}
#elseif($field.strutsAction.tableAction)
	public void ${field.setterName}RowSelection(java.util.List ${fieldName}RowSelection)
	{
		this.${fieldName}RowSelection = ${fieldName}RowSelection;
	}
#elseif($field.type.enumeration)
#set($enumeration = $field.type)
#set($type = $enumeration.fullyQualifiedName)
#if ($enumeration.literalType.primitive)
#set($literalType = $enumeration.literalType.wrapperName)
#else
#set($literalType = $enumeration.literalType.fullyQualifiedName)
#end
	public void ${field.setterName}($literalType#if($field.widgetType == "multibox")[]#end $fieldName)
    {
#if($field.widgetType == "multibox")
		if ($fieldName != null) {
			this.${fieldName} = new ${type}[${fieldName}.length];
	
    		for (int i = 0; i < ${fieldName}.length; i++) {
    			this.${fieldName}[i] =  ${type}.${enumeration.fromOperationName}(${fieldName}[i]);
    		}
		}
#else
		if ($fieldName != null)
			this.${fieldName} = ${type}.${enumeration.fromOperationName}($fieldName);
#end
    }
	
	public void ${field.setterName}($type#if($field.widgetType == "multibox")[]#end $fieldName)
    {
		if ($fieldName != null)
			this.${fieldName} = $fieldName;
    }
#else
#if(!$field.hiddenField)
	public void ${field.setterName}($fieldType $fieldName)
	{
		this.$fieldName = $fieldName;
	}
#else
#if($field.type.name=="String")
	public void ${field.setterName}($fieldType $fieldName)
	{
		this.$fieldName = $fieldName;
	}
#else
	public void ${field.setterName}(Object $fieldName)
	{
		if($fieldName == null) this.$fieldName = null;
		else if ($fieldName instanceof  String[]) {
			String temp = ((String[])$fieldName)[0];
			if (temp.isEmpty()) this.$fieldName = null;
			else this.$fieldName = ${fieldType}.valueOf(((String[])$fieldName)[0]);
		}
		else this.$fieldName = (${fieldType}) $fieldName;
	}
#end
#end
#end
#else
	public void ${field.setterName}(java.io.File $fieldName)
	{
		this.$fieldName = $fieldName;
	}

	/**
	$field.getDocumentation("     * ")
	*/

	public java.io.File ${field.getterName}()
	{
		return this.$fieldName;
	}

	public void ${field.setterName}ContentType(java.lang.String ${fieldName}ContentType)
	{
		this.${fieldName}ContentType = ${fieldName}ContentType;
	}

	/**
	$field.getDocumentation("     * ")
	*/

	public java.lang.String ${field.getterName}ContentType()
	{
		return this.${fieldName}ContentType;
	}

	public void ${field.setterName}FileName(java.lang.String ${fieldName}FileName)
	{
		this.${fieldName}FileName = ${fieldName}FileName;
	}

	/**
	$field.getDocumentation("     * ")
	*/

	public java.lang.String ${field.getterName}FileName()
	{
		return this.${fieldName}FileName;
	}

#end
#end
	public void saveErrorMessage(String message)
	{
		org.apache.struts.action.ActionMessages messages = (org.apache.struts.action.ActionMessages)request.getSession().getAttribute(org.apache.struts.Globals.MESSAGE_KEY);
		if (messages == null)
		{
			messages = new org.apache.struts.action.ActionMessages();
			request.getSession().setAttribute(org.apache.struts.Globals.MESSAGE_KEY, messages);
		}
		messages.add("org.andromda.bpm4struts.errormessages", new org.apache.struts.action.ActionMessage(message, null));
	}

	public void validate()
	{
		//Removendo mensagens antigas
		//request.getSession().setAttribute(org.apache.struts.Globals.MESSAGE_KEY, new org.apache.struts.action.ActionMessages());

		//Validando campos
#**
#foreach ($field in $action.actionParameters)
#if(${field.required})
#if(${field.type.name}=="String")
		if (${field.name} == null || ${field.name}.trim().length() <= 0 )
		{
			saveErrorMessage("${field.messageKey}.title");
			addFieldError("${field.name}","");
		}
#else
		if (${field.name} == null)
		{
			saveErrorMessage("${field.messageKey}.title");
			addFieldError("${field.name}", "");
		}
#end
#end
#end
*#
	}

#if ($securityEnabled && !${action.useCase.openAccess})
	public String particularExecute() throws Exception
#else
	public String execute() throws Exception
#end
	{
#processBreadCrumb($modulo $externalHyperlinkModulo $externalHyperlink $breadCrumbLabel $breadCrumbInput $action "		")
#if(${action.moduloRedirect})
		${servletPackage}.ActionUtil.copiaParametrosSessao(request,response, "${contextoPrincipal}");
#end
#if($action.exitingPage)
#set($useCaseName = $action.useCase.name)
#set($jspName = $action.input.name)
		Boolean aplicacaoPermiteUsoBackBrowser = (Boolean) request.getSession().getServletContext().getAttribute("aplicacaoPermiteUsoBackBrowser");
		
		if (!aplicacaoPermiteUsoBackBrowser ^#if(${action.togglePageControl}) true#else false#end)
		{
			if(getInvalidatePageControlCounter(request).get("${useCaseName}.${jspName}") != null && request.getParameter("invalidatePageControlCounter") != null && !(((Integer)getInvalidatePageControlCounter(request).get("${useCaseName}.${jspName}")).equals(Integer.valueOf(request.getParameter("invalidatePageControlCounter")))))
			{
				javax.servlet.http.HttpSession session = request.getSession();
				org.apache.struts.action.ActionMessages messages = (org.apache.struts.action.ActionMessages)session.getAttribute(org.apache.struts.Globals.MESSAGE_KEY);
				if (messages == null)
				{
					messages = new org.apache.struts.action.ActionMessages();
					session.setAttribute(org.apache.struts.Globals.MESSAGE_KEY, messages);
				}
				messages.add("$errorMessagesKey", new org.apache.struts.action.ActionMessage("pagina.expirou"));
				
#if(${action.ajaxAction} &&  ${action.temParametroTabela})	
				return "recarregaTabelas";
#else
				return "forwardAction";
#end
			}
		}
#end

		String forward = null;
		String redirect = "";
#if($action.enteringFinalState)
		request.getSession().setAttribute(org.apache.struts.Globals.MESSAGE_KEY, new org.apache.struts.action.ActionMessages());
#end
#if(!(${action.ajaxAction} &&  ${action.temParametroTabela}))
#foreach ($actionForward in $actionForwards)
		forward = "$actionForward.forwardName";
#end
#end

		boolean copyParameters = true;

		if (request.getSession().getAttribute(Constantes.COPY_PARAMETERS) != null) {
			copyParameters = (Boolean) request.getSession().getAttribute(Constantes.COPY_PARAMETERS);
			request.getSession().removeAttribute(Constantes.COPY_PARAMETERS);
		}

#if (!${action.copyParameters})
		request.getSession().setAttribute(Constantes.COPY_PARAMETERS, Boolean.FALSE);
#end
#if ($action.useCaseStart)
## [MOISES-COPPETEC]
##Codigo para retirar os sessionobjects da sessao que nao pertencem mais ao escopo, isto eh Session Object que
##esta na sessao e não pertence o caso de uso anterior. Para isto utiliza-se uma lista de cadastro. 
#processRemovePageSO("		")

		java.util.List listaCasosUso = new java.util.ArrayList();

#foreach ($finalState in $action.useCase.referencingFinalStates)
#if ($finalState.actions.size() > 0)
#set($finalStateAction = $finalState.actions.get(0))
		listaCasosUso.add("$finalStateAction.useCase.name");
#end
#end

		${servletPackage}.SessionObjectUtil.updateSessionObjects(request, listaCasosUso);

#end
##Fim
#if (!$action.actionFormFields.empty)

		${formBeanClassName} form = new ${formBeanClassName}();

#foreach ($field in ${action.actionFormFields})
#if ($field.strutsAction.tableAction)
		form.${field.setterName}RowSelection(this.${field.name}RowSelection);
#elseif($field.type.dateType)
		form.${field.setterName}AsDate(this.${field.name});
#elseif($field.file)
		form.${field.setterName}(this.${field.name});
		form.${field.setterName}FileName(this.${field.name}FileName);
		form.${field.setterName}ContentType(this.${field.name}ContentType);
#elseif ($field.doubleSelect)
		form.${field.setterName}(this.${field.name});
		form.${field.setterName}__Double(this.${field.name}__Double);
#else
		form.${field.setterName}(this.${field.name});
#end
#if(${field.widgetType}=="select" || ${field.radioButton})
#if(!$field.type.enumeration)
		form.${field.setterName}ComboList(this.${field.name}ComboList);
#end
#end
#end

		final $formBeanClassName specificForm = ($formBeanClassName)form;

#if ($action.useCaseStart)
## for each final state targetting this use-case we check the incoming variables that ought to
## survive the trip to this use-case, those parameters will have been put into session scope
## and here we move them into the new form
#if ($action.formScopeRequest)
		final Object previousFormObject = request.getAttribute("$action.useCase.formKey");
#else
		final Object previousFormObject = request.getSession().getAttribute("$action.useCase.formKey");
#end
## [MOISES-COPPETEC] - Codigo adicionado para permitir que os atributos do form sejam obtidos da transicao inician e nao
## mais dos casos de uso que o referenciam

		if(previousFormObject != null)
		{
#processUseCaseStartCopy2($action.actionFormFields "			")
		}
#else
#if($action.exitingPage && !$action.lookupGrid)
#set($useCaseName = $action.useCase.name)
#set($jspName = $action.input.name)
		if(getInvalidatePageControlCounter(request).get("${useCaseName}.${jspName}") == null) 
			getInvalidatePageControlCounter(request).put("${useCaseName}.${jspName}", 0);
		getInvalidatePageControlCounter(request).put("${useCaseName}.${jspName}", ((Integer)getInvalidatePageControlCounter(request).get("${useCaseName}.${jspName}")).intValue() + 1);
#end
#end

#if ($action.formScopeRequest)
		request.setAttribute("$action.useCase.formKey", form);
#else
		request.getSession().setAttribute("$action.useCase.formKey", form);
#end

		try
		{
## [MOISES-COPPETEC]
## Codigo responsavel por pegar o parametro da DisplayTag e colocar o nome da acao na sessao, caso esta acao 
## carregue dados para uma tabela e assim possibilitar a paginacao.
#set($possuiTable = false)
#foreach($field in $action.actionFormFields)
#if($field.table && !$possuiTable)
#set($possuiTable = true)
			request.getSession().setAttribute(Constantes.ACAO_ATUAL, "${action.actionPath}.action");
			
			if(request.getParameter(Constantes.PARAMETRO_PAGINA) == null)
			{
				request.setAttribute(Constantes.PARAMETRO_GRUPO, 1);
				request.getSession().setAttribute("formPaginacao", form);
			}
			else
			{
				Object previusForm = (org.apache.struts.action.ActionForm)request.getSession().getAttribute("formPaginacao");
				org.apache.commons.beanutils.PropertyUtils.copyProperties(form, previusForm);
				request.setAttribute(Constantes.PARAMETRO_GRUPO, Integer.parseInt(request.getParameter(Constantes.PARAMETRO_PAGINA)));
				request.setAttribute(Constantes.ATTRIBUTE_TABLE, request.getParameter(Constantes.PARAMETRO_TABLE));
			}
#end
#end
##Fim
#if($transition.target.findTaggedValue("$externalHyperlinkModulo"))
#set($finalUseCaseName = "$transition.target.findTaggedValue($externalHyperlinkModulo)$transition.target.findTaggedValue($externalHyperlink)")
#else
#set($finalUseCaseName = "${transition.target.targetUseCase.package.webModuleName}$transition.target.fullPath")
#end

#processOperationMode($action "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action" "			")
#processTableNameList($action "			")
#processTransitionStruts2($action "			")
		}//fim try
		catch (java.lang.Exception exception)
		{
#populateCurrentFormOnError("			")
			throw exception;
		}
#if($possuiTable)
		request.getSession().setAttribute("$action.useCase.formKey", form);
#end
#saveMessages($action "		")
#if (!$resettableActionParameters.empty)
#foreach ($field in $resettableActionParameters)
		specificForm.${field.resetName}();
#end
#end
#else
		org.apache.struts.validator.ValidatorForm form = null;
#processOperationMode($action "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action" "		")
#processTableNameList($action "		")
#processTransitionStruts2($action "		")
#if ($action.formScopeRequest)
		request.setAttribute("$action.useCase.formKey", null);
#else
		request.getSession().setAttribute("$action.useCase.formKey", null);
#end
#end ##if(!$action.actionFormFields.empty)
		
#processPageSO($action "		")
#processRedirectStruts2($action "		")

		if (redirect != "") {//troca de modules - to be tested
			response.sendRedirect(redirect);
		}
		
		request.removeAttribute("$forwardKey");
		request.removeAttribute("$forwardKeyModule");
		
#if(${action.ajaxAction} &&  ${action.temParametroTabela})
		return "recarregaTabelas";
#else
		return forward;
#end
	}

#foreach ($actionState in $action.actionStates)
	/**
$actionState.getDocumentation("	 * ")
	 */
	private String ${actionState.actionMethodName}(org.apache.struts.validator.ValidatorForm form) throws java.lang.Exception
	{
		String forward = null;
		String redirect ="";
#if	(!$action.useCaseStart && $action.getSource().hasStereotype("FrontEndView"))
		request.getSession().setAttribute(org.apache.struts.Globals.MESSAGE_KEY, new org.apache.struts.action.ActionMessages());
#end
#set($parameterReport = "")
#set ($reportName = "")
#foreach ($parameter in $actionState.forward.trigger.parameters)
#if($parameter.report)
#set($parameterReport = $parameter)
#set($reportName = $parameterReport.reportName)
#end
#end
#set ($controllerCalls = $actionState.controllerCalls)
#if ($controllerCalls.empty)
#saveMessages($actionState.forward "		")
		###processOperationMode($actionState.forward ${action.useCase.name})
#processOperationMode($actionState.forward "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action" "		")
#processTableNameList($actionState.forward "		")
#processTransitionStruts2($actionState.forward "		")
#else
	
#if (!$controllerClass.operations.isEmpty())
#foreach ($controllerCall in $controllerCalls)
#if (!$action.actionFormFields.empty)
		${controllerClass.name}Factory.get${controllerClass.name}Instance().${controllerCall.name}((${formBeanClassName}) form, new Struts2ViewContainer(this, request, response));
#else
		${controllerClass.name}Factory.get${controllerClass.name}Instance().${controllerCall.name}(null, new Struts2ViewContainer(this, request, response));
#end
#end
#end
##processOperationMode($actionState.forward ${action.useCase.name})
#processOperationMode($actionState.forward "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action" "		")
#processTableNameList($actionState.forward "		")
#processTransitionStruts2($actionState.forward "		")

#saveMessages($actionState.forward "		")

#end
#if(!$reportName.equals(""))
		try
		{
			String fs = System.getProperty("file.separator");
			java.io.File tempFile = java.io.File.createTempFile("${parameterReport.reportName}", "${parameterReport.reportType}");
			tempFile.deleteOnExit();
			$stringUtils.capitalize(${parameterReport.name})DataSourceImpl ds = new $stringUtils.capitalize(${parameterReport.name})DataSourceImpl((($formBeanClassName)form).${parameterReport.getterName}());
			java.util.Map parameters = ds.getParameters();  
			net.sf.jasperreports.engine.JasperPrint jasperPrint = net.sf.jasperreports.engine.JasperFillManager.fillReport(this.getClass().getClassLoader().getResourceAsStream("/${controllerClass.packagePath}/${parameterReport.reportName}.jasper"), parameters, ds);

#if($parameterReport.reportType.equals("pdf"))
			net.sf.jasperreports.engine.JasperExportManager.exportReportToPdfFile(jasperPrint, tempFile.getPath());
#elseif($parameterReport.reportType.equals("xls"))
			net.sf.jasperreports.engine.export.JRXlsExporter xlsExporter = new net.sf.jasperreports.engine.export.JRXlsExporter();
			xlsExporter.setParameter(net.sf.jasperreports.engine.JRExporterParameter.OUTPUT_FILE, tempFile );
			xlsExporter.setParameter(net.sf.jasperreports.engine.JRExporterParameter.JASPER_PRINT, jasperPrint);
			xlsExporter.setParameter(net.sf.jasperreports.engine.JRExporterParameter.CHARACTER_ENCODING, "ISO-8859-9");
			xlsExporter.exportReport();
#end

			response.setContentType("application/${parameterReport.reportType}");
			response.setHeader("Content-Disposition","attachment;filename=${parameterReport.reportName}.${parameterReport.reportType}");

			byte[] dados = new byte[1024];
			java.io.InputStream in = new java.io.FileInputStream (tempFile);
			int length = in.read(dados);
			while(length >= 0) {
				response.getOutputStream().write(dados);
				length = in.read(dados); 
			}

#processTransitionStruts2($actionState.forward "		")
		} catch (Exception e) {
			throw e;
		}
#end
		return forward;
	}
#end ## for actionState

#foreach ($decisionTransition in $decisionTransitions)
#set ($controllerMethodName = $decisionTransition.operationCall.name)
#set ($decisionMethodName = "__$controllerMethodName")
	/**
$decisionTransition.getDocumentation("	 * ")
	 */
	private String ${decisionMethodName}(org.apache.struts.validator.ValidatorForm form) throws java.lang.Exception
	{
		String forward = null;
		String redirect ="";
#if (!$controllerClass.operations.isEmpty())
#if (!$action.actionFormFields.empty)
		final java.lang.String value = java.lang.String.valueOf(${controllerClass.fullyQualifiedName}Factory.get${controllerClass.name}Instance().${controllerMethodName}((${decisionTransition.operationCall.interfaceName}) form, new Struts2ViewContainer(this, request, response)));
#else
		// we pass an empty form implementation to the controller, we know there are no parameters on this operation because the
		// cartridge would have issued a model validation error
		//final java.lang.String value = java.lang.String.valueOf(${controllerClass.fullyQualifiedName}Factory.get${controllerClass.name}Instance().${controllerMethodName}(mapping, new ${decisionTransition.operationCall.interfaceName}(){}, request, response));

		final java.lang.String value = java.lang.String.valueOf(${controllerClass.fullyQualifiedName}Factory.get${controllerClass.name}Instance().${controllerMethodName}(new ${decisionTransition.operationCall.interfaceName}(){}, new Struts2ViewContainer(this, request, response)));
#end
#end

#set ($defaultOutcome = false)## keeps track of the last transition
#foreach ($outcome in $decisionTransition.target.getOutgoing())
#set ($defaultOutcome = $outcome)
		if (value.equals("$outcome.guardName"))
		{
#saveMessages($outcome "			")
###processOperationMode($outcome ${action.useCase.name})
#processOperationMode($outcome  "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action" "			")
#processTableNameList($outcome "			")
#processTransitionStruts2($outcome "			")
			return forward;
		}
#end

		// we take the last action in case we have an invalid return value from the controller
		## #processOperationMode($defaultOutcome)
#processOperationMode($defaultOutcome  "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action" "		")
#processTableNameList($defaultOutcome "		")
#processTransitionStruts2($defaultOutcome "		")
		return forward;
	}

#end

	private java.util.Map getInvalidatePageControlCounter(javax.servlet.http.HttpServletRequest request)
	{
		java.util.Map invalidatePageControlCounter = (java.util.Map)request.getSession().getAttribute("invalidatePageControlCounter");

		if(invalidatePageControlCounter == null)
		{
			invalidatePageControlCounter = new java.util.HashMap();
			request.getSession().setAttribute("invalidatePageControlCounter", invalidatePageControlCounter);
		}

		return invalidatePageControlCounter;
	}

	public void loadUseCaseInfo()
	{
		__casoDeUso = "${action.useCase.name}";
		__urlCasoDeUso = "${action.actionPath}.action";
		__modulo = "${action.useCase.package.webModuleName}";
		__contexto = "$stringUtils.replaceOnce(${action.useCase.package.contexto}, ${contextoPrincipal}, "")";
	}
}
#end