#if(!$entity.subentity)
#set ($generatedFile = "${entity.packagePath}/${entity.name}.java")
// license-header java merge-point
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityTOInterface.vsl in andromda-hibernate-cartridge.
//

package $entity.packageName;

/**
$entity.getDocumentation(" * ")
 */
 
public interface  ${entity.name} extends
br.ufrj.coppetec.Entity
#if($entity.generalization)
#set ($generalizacao = ${entity.generalization.fullyQualifiedName})
   , ${generalizacao}
#end
{
#if ($stringUtils.isNotBlank($entity.hibernateVersionProperty))
#set ($versionProperty = $entity.hibernateVersionProperty)
#set ($versionPropertyCapitalized = $stringUtils.capitalize($entity.hibernateVersionProperty))
    public int get$versionPropertyCapitalized();
#end
#foreach ( $attribute in $entity.attributes )
#set ($typeName = $attribute.type.fullyQualifiedName)
#if ($attribute.containsEmbeddedObject)
#set ($typeName = $attribute.type.fullyQualifiedEntityName)
#end

#if($attribute.findTaggedValue($throwsVetoException).equals("true"))
#set($exceptionList = "java.beans.PropertyVetoException")
#end
#if($attribute.isHstore())
	$attribute.visibility $typeName<String,String> ${attribute.getterName}();
	$attribute.visibility String ${attribute.getterName}(String key);
	$attribute.visibility void remove${attribute.name.substring(0,1).toUpperCase()}${attribute.name.substring(1)}(String key);
#if($attribute.findTaggedValue($throwsVetoException).equals("true"))
    $attribute.visibility void ${attribute.setterName}(${typeName} $attribute.name) throws $exceptionList;
	$attribute.visibility void ${attribute.setterName}(String key, String value) throws $exceptionList;    
#else
    $attribute.visibility void ${attribute.setterName}(${typeName}<String,String> $attribute.name);
    $attribute.visibility void ${attribute.setterName}(String key, String value);
#end
#else
    $attribute.visibility $typeName ${attribute.getterName}();
#if($attribute.findTaggedValue($throwsVetoException).equals("true"))
    $attribute.visibility void ${attribute.setterName}(${typeName} $attribute.name) throws $exceptionList;
#else
    $attribute.visibility void ${attribute.setterName}(${typeName} $attribute.name);
#end
#end
#end

## Generate the associations
#foreach ($associationEnd in $entity.associationEnds)
#set ($target = $associationEnd.otherEnd)
#if($target.subentity)
##if($target.one2One)
#set($camelCaseName = $target.name.substring(0,1).toUpperCase().concat($target.name.substring(1)))
##set($camelCaseName = $target.name.substring)
//	public void set${camelCaseName}(${target.getType().packageName}.${target.getType().name} $target.name);
	public ${target.getType().packageName}.${target.getType().name} get${camelCaseName}();
	public void set${camelCaseName}(java.util.Map<String,String> ${target.getType().name}); 
//	public void set${camelCaseName}(String $target.name);

/*	public String get${camelCaseName}();*/

##end
#else
#if ($target.navigable || ($associationEnd.child && $entity.foreignHibernateGeneratorClass))
#set ($tipo = ${target.getterSetterTypeName})
#set ($tipoEntidade = ${target.type.fullyQualifiedName})
    public ${tipo} ${target.getterName}();
#if($target.findTaggedValue($throwsVetoException).equals("true"))
#set($exceptionList = "java.beans.PropertyVetoException")
#end

#if($target.findTaggedValue($throwsVetoException).equals("true"))
    public void ${target.setterName}(${tipo} ${target.name}) throws $exceptionList;
#else
    public void ${target.setterName}(${tipo} ${target.name});
#end

#if ($associationEnd.navigable)
#set($exception = "")
#if($target.findTaggedValue($throwsVetoException).equals("true") || $associationEnd.findTaggedValue($throwsVetoException).equals("true") )
#set($exception = "throws java.beans.PropertyVetoException")
#end
    public void ${target.setterName}Inverse(${tipo} ${target.name}) $exception;
#if($target.many)
#set($exception = "")
#if($target.findTaggedValue($throwsVetoException).equals("true") || $associationEnd.findTaggedValue($throwsVetoException).equals("true"))
#set($exception = "throws java.beans.PropertyVetoException")
#end

    public void add${stringUtils.capitalize($target.name)}(${tipoEntidade} ${stringUtils.uncapitalize($target.type.name)}Temp) $exception;

    public void remove${stringUtils.capitalize($target.name)}(${tipoEntidade} ${stringUtils.uncapitalize($target.type.name)}Temp) $exception;

#end
#end
#end
#end
#end
    public br.ufrj.coppetec.Entity getInstance();

    public boolean instanceOf(Class<?> otherClass);
}
#end