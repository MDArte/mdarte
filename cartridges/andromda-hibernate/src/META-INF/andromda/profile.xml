<?xml version="1.0" encoding="ISO-8859-1" ?>

<profile>
    <documentation>
        <p>
            Dependencies can be used between Services and Entities, they
            won't need any stereotype assigned to them. These dependencies
            are used to reference an entity from another entity or service,
            or to reference a service from an entity or another service.
        </p>
        <p>
            Entity query operations (i.e. finders) can be denoted by setting the
            query flag on the modeled operation to true
            (they do not require any stereotypes).
        </p>
        <p>
            Actors represent roles within your model. To designate that a role
            has access to a given service you must draw a dependency from an Actor
            to the
            <a href="Service"><![CDATA[<<Service>>]]></a>. To designate the
            role has access to to a given operation, you must draw a dependency from
            an Actor to the operation.
        </p>
        <p>
            <strong>Transitive persistence</strong>in Hibernate is controlled by cascading Hibernate operations.
            There are four points to adjust that:
            <ul>
                <li>the
                    <a href="namespace.html#hibernateDefaultCascade">hibernateDefaultCascade</a>namespace property:
                    the overall default for cascade
                </li>
                <li>the
                    <a href="namespace.html#hibernateCompositionCascade">hibernateCompositionCascade</a>namespace
                    property:
                    how an UML composition should be interpreted as cascade
                </li>
                <li>the
                    <a href="namespace.html#hibernateAggregationCascade">hibernateAggregationCascade</a>namespace
                    property:
                    how an UML aggregation should be interpreted as cascade
                </li>
                <li>the
                    <a href="profile.html#@andromda_hibernate_cascade">@andromda.hibernate.cascade tagged value</a>
                    at the individual association end
                </li>
            </ul>
            The idea is to visualize the cascading hierarchie by using UML composition and aggregation. The inverse
            direction is marked with cascade="none" to get a clear direction.
        </p>
    </documentation>
    <elements>
        <elementGroup name="Stereotypes">
            <element name="VISITOR_ADAPTER_ROOT">
                <value>VisitorAdapterRoot</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            
            <element name="ENTITY">
                <documentation>
                    Denotes a class is representing an Hibernate POJO. This will instruct the cartridge to generate
                    an <code>.hbm.xml</code> descriptor and the corresponding class from it.
                </documentation>
                <value>Entity</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            
            <element name="SERVICE">
                <documentation>
                    Denotes a class is representing an EJB session bean that is supposed to be used as a facade
                    for a set of entities.
                </documentation>
                <value>Service</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            
            <element name="WEB_SERVICE_DATA">
                <value>WebServiceData</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            
            <element name="ENUMERATION">
                <documentation>
                    This class will instruct the generation of a type-safe enumeration class. The class implements the
                    required Hibernate interface to be able to be persisted. That way it is possible for Entities to
                    use this enumeration type for their attributes.
                </documentation>
                <value>Enumeration</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
        </elementGroup>
        <elementGroup name="Tagged Values">
            <element name="HIBERNATE_INVERSE">
                <value>@andromda.hibernate.inverse</value>
            </element>
            <element name="HIBERNATE_QUERY">
                <documentation>
                    Defines a hibernate query expression. Note that it's encouraged
                    to model your query body as an OCL constraint (instead of using
                    this tagged value).
                </documentation>
                <value>@andromda.hibernate.query</value>
                <appliedOnElement>An Entity operation marked as a
                    <code>query</code>.
                </appliedOnElement>
            </element>
            <element name="EJB_VIEWTYPE">
                <documentation>
                    Defines the view type for a Session EJB. If undefined,
                    the default defined by the
                    <a href="namespace.html#ejbViewType">ejbViewType</a>
                    namespace property will be assumed.
                </documentation>
                <value>@andromda.ejb.viewType</value>
                <appliedOnElement><![CDATA[<<Service>>]]></appliedOnElement>
                <allowedValues>
                    <value>local</value>
                    <value>remote</value>
                    <value>both</value>
                </allowedValues>
            </element>
            <element name="EJB_TRANSACTION_TYPE">
                <documentation>
                    Defines a transaction type for the method.
                </documentation>
                <value>@andromda.ejb.transaction.type</value>
                <appliedOnElement>Service Operation</appliedOnElement>
                <allowedValues>
                    <value>NotSupported</value>
                    <value>Supports</value>
                    <value>Required</value>
                    <value>RequiresNew</value>
                    <value>Mandatory</value>
                    <value>Never</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_LAZY">
                <documentation>
                    Used to denote how a relationship must be loaded:
                    <code>true</code>for
                    <code>lazy</code>,
                    <code>false</code>for
                    <code>eager</code>. Defaults to
                    <code>false</code>for composite
                    associations (unless
                    <a href="namespace.html#compositionDefinesEagerLoading">compositionDefinesEagerLoading</a>is
                    set to
                    <code>false</code>) and defaults to
                    <code>true</code>for the other kinds.
                </documentation>
                <value>@andromda.hibernate.lazy</value>
                <appliedOnElement>Association ends between
                    <a href="#Entity"><![CDATA[<<Entity>>]]></a>classes
                </appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_LAZY_TYPE">
                <value>@andromda.hibernate.lazy.type</value>
                <appliedOnElement>Association ends between
                    <a href="#Entity"><![CDATA[<<Entity>>]]></a>classes
                </appliedOnElement>
                <allowedValues>
                    <value>proxy</value>
                    <value>no-proxy</value>
                    <value>true</value>
                    <value>false</value>
                    <value>extra</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_INHERITANCE">
                <documentation>
                    Used to override the default hibernate inheritance
                    strategy defined by the
                    <a href="namespace.html#hibernateInheritanceStrategy">hibernateInheritanceStrategy</a>
                    namespace property.
                    <ul>
                        Permitted values are:
                        <li>class - table per hierarchy.</li>
                        <li>subclass - table per class in hierarchy.</li>
                        <li>concrete - Table per class.</li>
                        <li>union-subclass - Table per class (only on Hibernate 3).</li>
                        <li>
                            interface - Root class is defined as
                            an interface and the attributes remapped to the subclasses.
                            This is useful in the concrete case because it has limitations
                            in the associations.
                        </li>
                    </ul>
                    <p>
                        The tagged value of @andromda.hibernate.inheritance
                        is set on the base/root class.
                        All subclasses must then follow the same strategy unless
                        interface or concrete is the predecessor strategy.
                        The default strategy is defined by the
                        <a href="namespaces.html#hibernateInheritanceStrategy">hibernateInheritanceStrategy</a>
                        namespace property.
                    </p>
                </documentation>
                <value>@andromda.hibernate.inheritance</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>class</value>
                    <value>subclass</value>
                    <value>concrete</value>
                    <value>union-subclass</value>
                    <value>interface</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_OUTER_JOIN">
                <documentation>
                    Defines if Hibernate will use a outer join for fetching the given assocation end.
                    For Hibernate3 this will result in a fetch clause with values:
                    <ul>
                        <li>join</li>
                        <li>select</li>
                    </ul>
                </documentation>
                <value>@andromda.hibernate.outerjoin</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>auto</value>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ENTITY_DYNAMIC_INSERT">
                <documentation>
                    Defines if the entity will limit the SQL insert statement to properties with values. This value
                    overrides the
                    <a href="namespace.html#hibernateEntityDynamicInsert">namespace property</a>for this entity.
                </documentation>
                <value>@andromda.hibernate.entity.dynamicInsert</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ENTITY_DYNAMIC_UPDATE">
                <documentation>
                    Defines if the entity will limit the SQL update statements to properties that are modified. This
                    value overrides the
                    <a href="namespace.html#hibernateEntityDynamicUpdate">namespace property</a>for this entity.
                </documentation>
                <value>@andromda.hibernate.entity.dynamicUpdate</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_GENERATOR_CLASS">
                <documentation>
                    Used to define the generator class used for the hibernate entity.
                    Any of the hibernate generator classes may be used.
                </documentation>
                <value>@andromda.hibernate.generator.class</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>increment</value>
                    <value>identity</value>
                    <value>sequence</value>
                    <value>hilo</value>
                    <value>seqhilo</value>
                    <value>guid</value>
                    <value>uuid</value>
                    <value>uuid.hex</value>
                    <value>uuid.string</value>
                    <value>native</value>
                    <value>assigned</value>
                    <value>select</value>
                    <value>foreign</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_PROXY">
                <documentation>
                    Defines if a proxy will be enabled for the entity. Overrrides the "hibernateProxy" namespace
                    property.
                </documentation>
                <value>@andromda.hibernate.entity.proxy</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_COLLECTION_TYPE">
                <documentation>
                    Used to define the mapping for hibernate collections.
                    This value overrides the
                    <a href="namespace.html#hibernateAssociationCollectionType">namespace property</a>.
                </documentation>
                <value>@andromda.hibernate.collection.type</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>set</value>
                    <value>map</value>
                    <value>bag</value>
                    <value>valuest</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_SORT_TYPE">
                <documentation>
                    Used to define how elements will be sorted within the collection defined by the association. (Only
                    available for maps and sets)
                    This value overrides the
                    <a href="namespace.html#hibernateAssociationSortType">namespace property</a>.
                </documentation>
                <value>@andromda.hibernate.sort.type</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>unsorted</value>
                    <value>natural</value>
                    <value>comparatorClass</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_ORDER_BY_COLUMNS">
                <documentation>
                    Column names that will be used for sorting the collection, with asc or desc optionally.
                </documentation>
                <value>@andromda.hibernate.orderByColumns</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>Properties of this entity</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_WHERE_CLAUSE">
                <documentation>
                    SQL condition to define a subset of available data for the collection
                </documentation>
                <value>@andromda.hibernate.whereClause</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>An SQL code fragment</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_INDEX">
                <documentation>
                    Column containing the collection index, overrides the
                    <a href="namespace.html#associationEndCollectionIndexName">associationEndCollectionIndexName</a>
                </documentation>
                <value>@andromda.hibernate.collection.index</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>A property of this entity</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_INDEX_TYPE">
                <documentation>
                    The type of the column containing the collection index, overrides the
                    <a href="namespace.html#associationEndCollectionIndexType">associationEndCollectionIndexType</a>
                </documentation>
                <value>@andromda.hibernate.collection.index.type</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>A property of this entity</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_VERSION_PROPERTY">
                <documentation>
                    Specifies wheter or not the entity will have a version property. If a value is present, then the
                    entity will have
                    a version property with the name specified within the tagged value.
                </documentation>
                <value>@andromda.hibernate.version</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>The name of the version property</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CASCADE">
                <documentation>
                    Place an individual cascade value at an association end, overriding the properties
                    <a href="namespace.html#hibernateDefaultCascade">hibernateDefaultCascade</a>,
                    <a href="namespace.html#hibernateCompositionCascade">hibernateCompositionCascade</a>and
                    <a href="namespace.html#hibernateAggregationCascade">hibernateAggregationCascade</a>.
                </documentation>
                <value>@andromda.hibernate.cascade</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
            </element>
            <element name="HIBERNATE_FORMULA">
                <documentation>
                    Defines an attribute of a class as a calculated value. This tagged value
                    stores the SQL formula that will be used to assign a value to this property.
                    Provides the ability to specify the name to be used
                    (if different than the actual name of the actor).
                </documentation>
                <value>@andromda.hibernate.formula</value>
                <appliedOnElement>the attribute of an <![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>An SQL code fragment</value>
                </allowedValues>
            </element>
        </elementGroup>
        <elementGroup name="Tagged Values for caching">
            <documentation>
                The following are tagged values exclusively used for tuning the persistence cache.
            </documentation>
            <element name="HIBERNATE_USE_QUERY_CACHE">
                <documentation>
                    Defines is caching is enabled for this query
                </documentation>
                <value>@andromda.hibernate.query.useCache</value>
                <appliedOnElement>A query operation</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ENTITY_CACHE">
                <documentation>
                    Defines the cache strategy for the Entity.
                </documentation>
                <value>@andromda.hibernate.entity.cache</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>read-write</value>
                    <value>nonstrict-read-write</value>
                    <value>read-only</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ENTITY_BATCH">
                <documentation>
                    Defines the batch size for the Entity.
                </documentation>
                <value>@andromda.hibernate.entity.batch</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>a number</value>
                </allowedValues>
            </element>            
            <element name="HIBERNATE_ASSOCIATION_CACHE">
                <documentation>
                    Defines the cache strategy for the association.
                </documentation>
                <value>@andromda.hibernate.association.cache</value>
                <appliedOnElement>Association between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>read-write</value>
                    <value>nonstrict-read-write</value>
                    <value>read-only</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_BATCH">
                <documentation>
                    Defines the batch size for the association.
                </documentation>
                <value>@andromda.hibernate.association.batch</value>
                <appliedOnElement>Association between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>a number</value>
                </allowedValues>
            </element>                        
            <element name="HIBERNATE_EHCACHE_MAX_ELEMENTS">
                <documentation>
                    EhCache property. Defines the maximum number of objects that will be created in memory.
                </documentation>
                <value>@andromda.hibernate.ehcache.maxElementsInMemory</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>A strictly positive integer</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_EHCACHE_ETERNAL">
                <documentation>
                    EhCache property. Defines if elements are eternal.
                </documentation>
                <value>@andromda.hibernate.ehcache.eternal</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_EHCACHE_TIME_TO_IDLE">
                <documentation>
                    EhCache property. Defines the time to idle for an element before it expires.
                </documentation>
                <value>@andromda.hibernate.ehcache.timeToIdleSeconds</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>A strictly positive integer</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_EHCACHE_TIME_TO_LIVE">
                <documentation>
                    EhCache property. Defines the time to live for an element before it expires.
                </documentation>
                <value>@andromda.hibernate.ehcache.timeToLiveSeconds</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>A strictly positive integer</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_EHCACHE_OVERFLOW_TO_DISK">
                <documentation>
                    EhCache property. Defines if elements can overflow to disk.
                </documentation>
                <value>@andromda.hibernate.ehcache.overflowToDisk</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
        </elementGroup>
    </elements>
</profile>
