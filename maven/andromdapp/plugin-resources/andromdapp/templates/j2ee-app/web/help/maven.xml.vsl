<project default="install"
         xmlns:ant="jelly:ant"
         xmlns:u="jelly:util"
         xmlns:maven="jelly:maven"
         xmlns:j="jelly:core">

     <goal name="install" prereqs="help:install"/>

#set($open = "${")
#set($end = "}")

    <goal name="help:install">
        <ant:mkdir dir="${open}basedir${end}/target/src"/>
        <ant:mkdir dir="${open}basedir${end}/target/classes"/>
        <ant:mkdir dir="${open}basedir${end}/src/java"/>    

        <ant:path id="web.classpath">
            <ant:path refid="maven.dependency.classpath"/>
            <ant:path location="${maven.build.dest}"/>
        </ant:path>

        <ant:path id="compile">
            <ant:pathelement path="${open}basedir${end}/target/src"/>
            <ant:pathelement path="${open}basedir${end}/src/java/"/>
        </ant:path>

        <ant:javac destdir="${open}basedir${end}/target/classes" includes="**/*.java" debug="on">
            <ant:src>
                <ant:path refid="compile"/>
            </ant:src>
            <ant:classpath>
                <ant:path refid="maven.dependency.classpath"/>
            </ant:classpath>
        </ant:javac>

        <maven:maven
            descriptor="${open}basedir${end}/project.xml"
            goals="war:install"/>
    </goal>

    <ant:property environment="env"/>

    <j:set var="deployDirectory" value="${env.JBOSS_HOME}/server/${jboss.config}/deploy"/>

    <goal name="deploy" prereqs="undeploy">
        <j:choose>
            <j:when test="${deployExploded}">
                <ant:copy todir="${deployDirectory}/${pom.artifactId}${artifactIdSuffix}">
                    <ant:fileset dir="${maven.war.webapp.dir}"/>
                </ant:copy>
            </j:when>
            <j:otherwise>
                <ant:copy file="${user.home}/.maven/repository/${pom.groupId}/wars/${pom.artifactId}${artifactIdSuffix}-${pom.CurrentVersion}.war"
                        tofile="${deployDirectory}/${pom.artifactId}${artifactIdSuffix}-${pom.CurrentVersion}.war"/>
            </j:otherwise>
        </j:choose>
    </goal>

    <goal name="undeploy">
        <ant:delete includeEmptyDirs="true">
            <ant:fileset dir="${deployDirectory}">
                <ant:include name="${pom.artifactId}${artifactIdSuffix}*.war"/>
            </ant:fileset>
        </ant:delete>
    </goal>

    <preGoal name="help:install">
        <u:available file="${maven.src.dir}/jsp">
            <ant:copy todir="${maven.war.webapp.dir}" overwrite="true">
                <ant:fileset dir="${maven.src.dir}/jsp">
                    <include name="**/*"/>
                    <exclude name="**/*.java"/>
                </ant:fileset>
            </ant:copy>
        </u:available>
        <u:available file="${maven.src.dir}/java">
            <ant:copy todir="${maven.war.webapp.dir}" overwrite="true">
                <ant:fileset dir="${maven.src.dir}/java">
                    <include name="**/*"/>
                    <exclude name="**/*.java"/>
                </ant:fileset>
            </ant:copy>
        </u:available>
    </preGoal>

    <!-- ==================================================================
       Shows help
     ================================================================== -->
<goal name="help">
    <ant:echo> 

maven deploy - Copia os wars do web para o seu JBoss

maven clean - Apaga o conteudo da pasta target

maven help:install - Compila o modulo help e gera o war
 
    </ant:echo>
</goal>

    <!-- ==================================================================
           Cleans Everything and deletes all implementation classes
         ================================================================== -->
    <goal name="nuke">
        <ant:delete>
            <fileset dir="src/java">
                <include name="**/*Impl.java"/>
            </fileset>
        </ant:delete>
        <attainGoal name="clean"/>
    </goal>

    <goal name="earInstall">
        <j:set var="earDirectory" value="${basedir}/../../target/ear"/>

        <!-- Copia libs necessarias para o ear -->
        <!-- JBoss EAP 6.1 Deprecated
        <j:if test="${open}packDependencies${end}">
            <j:forEach var="dep" items="${open}pom.dependencies${end}">
                <j:if test="${open}dep.getProperty('application.dependency') == 'true'${end}">
                    <ant:copy todir="${open}earDirectory${end}">
                        <fileset dir="${open}maven.repo.local${end}/${open}dep.groupId${end}/${open}dep.type${end}s/">
                            <include name="$${open}dep.artifact${end}" />
                        </fileset>
                    </ant:copy>
                </j:if>
            </j:forEach>
        </j:if>
        -->

        <!-- Copia .war para a pasta do ear -->
        <ant:copy file="${maven.repo.local}/${pom.groupId}/wars/${pom.artifactId}${artifactIdSuffix}-${pom.CurrentVersion}.war"
            tofile="${earDirectory}/${pom.artifactId}${artifactIdSuffix}-${pom.CurrentVersion}.war"/>

        <!-- Gera trecho do arquivo application.xml -->
        <j:set var="earTempDirectory" value="${open}basedir${end}/../../target/ear/temp"/>
        <j:file name="${earTempDirectory}/web-help.xml"
                outputMode="xml"
                omitXmlDeclaration="true"
                escapeText="false"
                trim="false"><![CDATA[
<module>
    <web>
        <web-uri>${pom.artifactId}${artifactIdSuffix}-${pom.CurrentVersion}.war</web-uri>
        <context-root>/${projectId}/help</context-root>
    </web>
</module>]]></j:file>
    
    	<!-- JBoss EAP 6.1 -->
    	<!-- Gera trecho do arquivo jboss-deployment-structure.xml -->
        <j:set var="earTempDirectory" value="${basedir}/../../target/ear/temp"/>
        <j:file name="${earTempDirectory}/jboss-deployment-structure-web-help.xml"
            outputMode="xml"
            omitXmlDeclaration="true"
            escapeText="false"
            trim="false"><![CDATA[
    <sub-deployment name="${pom.artifactId}${artifactIdSuffix}-${pom.CurrentVersion}.war">
    	<dependencies>
      		<module name="br.mdarte" />
		</dependencies>
		<local-last value="true" />
	</sub-deployment>]]></j:file>
                    
        
    </goal>
</project>