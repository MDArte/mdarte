##
##
##      This macro takes care of rendering the appropriate Struts
##      HTML hyperlink tags for the argument action
##
##
#macro ( renderHyperlink2 $action $indent )
#set ($roles = $action.actionRoles)
#set ($trigger = $action.actionTrigger)
#set ($triggerKey = $trigger.triggerKey)
#set ($parameters = $action.actionParameters)
#set ($formBeanName = $action.useCase.formKey)
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
###if ($securityEnabled)
##${indent}<logic:present role="$roles">
###end
##
#set($actionEnd = ".do")
#if(!${action.actionOldStruts})
#set($actionEnd = ".action")
#end
#set($prefixoLink = ${action.useCase.package.contexto})
#if ($action.useCase.package.contexto == ${contextoPrincipal})
#set ($prefixoLink = ${contextoPrincipal})
#end
#set ($requestPath = "${prefixoLink}${action.actionPath}${actionEnd}")
#set ($separator = "?")
#foreach ($parameter in $parameters)
#if ($parameter.defaultValuePresent)
#set ($parameterValue = "$parameter.defaultValue")
#else
#set ($parameterValue = "${${formBeanName}.${parameter.name}}")
#end
#if($velocityCount > 1)#set($separator = "&")#end
#set ($requestPath = "${requestPath}${separator}${parameter.name}=${parameterValue}")
#end
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	<security:containsPermission name="$triggerKey">
#end
${indent}		<p>
${indent}			<a id="hyperLink${action.actionName.replace(' ','')}" href="${requestPath}" >
${indent}				<s:property value="%{getText('$triggerKey')}" />
${indent}			</a>
${indent}		</p>
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	</security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}</security:containsOperationMode>
#end
#end
#macro ( renderFieldHyperlink2 $action $field $indent )
#set ($trigger = $action.actionTrigger)
#set ($triggerKey = $trigger.triggerKey)
#set ($parameters = $action.actionParameters)
#set ($formBeanName = $action.useCase.formKey)
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
##
#set($actionEnd = ".do")
#if(!${action.actionOldStruts})
#set($actionEnd = ".action")
#end
##
#set($prefixoLink = ${action.useCase.package.contexto})
#if ($action.useCase.package.contexto == ${contextoPrincipal})
#set ($prefixoLink = ${contextoPrincipal})
#end
#set ($requestPath = "${prefixoLink}${action.actionPath}${actionEnd}")
#set ($separator = "?")
#foreach ($parameter in $parameters)
#if ($parameter.defaultValuePresent)
#set ($parameterValue = "$parameter.defaultValue")
#else
#set ($parameterValue = "${${formBeanName}.${parameter.name}}")
#end
#if($velocityCount > 1)#set($separator = "&")#end
#set ($requestPath = "${requestPath}${separator}${parameter.name}=${parameterValue}")
#end
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	<security:containsPermission name="$triggerKey">
#end
${indent}		<p>
${indent}			<a id="${field.name}${action.useCase.name}" href="${requestPath}" #if($hints)onmouseover="hints.show('$field.hintKey', '$styleId')" title="" onmouseout="hints.hide()"#end>
${indent}				<c:out value="${__value}"/>
${indent}			</a>
${indent}		</p>
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	</security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}</security:containsOperationMode>
#end
#end
##
##
##      This macro takes care of rendering the appropriate Struts
##      HTML hyperlink tags for the argument action in a table
##
##
#macro ( renderTableHyperlink2 $action $columnName $indent )
#set($uriQuery='')#set($delim='?')#set($beanName="row")
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#foreach ($parameter in $action.actionParameters)
## temporarily commented out, we're taking all parameters from the row since we can't easily check if the row property
## is missing the property (reflection is not supported in taglibs nor JSTL EL)
## the idea was to take a property from the action form when it is not defined on the row class
##if(!$action.tableLinkParameter.tableColumnNames.contains($parameter.name))#set($beanName=$formName)#end
#set($paramValue="${beanName}.${parameter.name}")#set($uriQuery="${uriQuery}${delim}${parameter.name}=${${paramValue}}")#set($delim='&')
#end
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	<security:containsPermission name="$action.actionTrigger.triggerKey">
#end
#set($actionEnd = ".do")
#if(!${action.actionOldStruts})
#set($actionEnd = ".action")
#end
#set($prefixoLink = ${action.useCase.package.contexto})
#if ($action.useCase.package.contexto == ${contextoPrincipal})
#set ($prefixoLink = ${contextoPrincipal})
#end
##
${indent}		<a id="tableHyperlink${action.name.replace(' ','')}" href="${prefixoLink}${action.actionPath}${actionEnd}${uriQuery}" #if($hints)onmouseover="hints.show('$action.actionTrigger.name')" onmouseout="hints.hide()"#end>
#if ($action.tableLinkColumnName)## the action is targetting a column, so display the table cell value
#set($linkValue="${beanName}.${columnName}")
${indent}			${${linkValue}}
#else
${indent}			<s:property value="%{getText('$action.actionTrigger.triggerKey')}" />
#end
${indent}		</a>
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	</security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}</security:containsOperationMode>
#end

#end
##
##
##      This macro takes care of rendering the appropriate Struts
##      HTML hyperlink tags for the argument action in a table
##
##
#macro ( renderTableButtonStruts2 $action $indent $rowIndex )
#set($linkParameters="")
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set($delim='?')
#set($beanName="row")
#set ($parameterCount = $action.actionParameters.size())
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#foreach ($parameter in $action.actionParameters)
## temporarily commented out, we're taking all parameters from the row since we can't easily check if the row property
## is missing the property (reflection is not supported in taglibs nor JSTL EL)
## the idea was to take a property from the action form when it is not defined on the row class
##if(!$action.tableLinkParameter.tableColumnNames.contains($parameter.name))#set($beanName=$formName)#else#set($beanName="row")#end
#set($linkParameters="${linkParameters}${delim}${parameter.name}=")
#if ($parameter.widgetType == 'plaintext')
#set($linkParameters="${linkParameters}${${beanName}.${parameter.name}}")
#set ($delim = '&')
#else
#if ($parameter.defaultValuePresent)
#set($linkParameters="${linkParameters}${parameter.defaultValue}'")
#else
#set($linkParameters="${linkParameters}'+getDiv('$parameter.styleId$rowIndex').value")
#end
#set ($delim = "+'&")
#end
#end
## properly add a suffix when that last entry was an updateable field so the javascript does not have
## an unclosed literal
#set($actionEnd = ".do")
#if(!${action.actionOldStruts})
#set($actionEnd = ".action")
#end
#set($prefixoLink = ${action.useCase.package.contexto})
#if ($action.useCase.package.contexto == ${contextoPrincipal})
#set ($prefixoLink = ${contextoPrincipal})
#end
${indent}<c:set var="link">'${prefixoLink}${action.actionPath}${actionEnd}${linkParameters}#if($delim!="+'&")'#end</c:set>
#set ($valueConfirmMessage = "")
#set ($valueConfirmMessage = $action.findTaggedValue("$confirmMessage"))
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($action.imageLink)
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	<security:containsPermission name="$action.imageMessageKey">
#end
${indent}		<nobr><a id="imageLink${action.name}" href="javascript:document.location=${link};" class="imageLink" ><img src="<s:url value='%{getText($action.imageMessageKey)}'"/> /></a></nobr>
#else
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	<security:containsPermission name="$action.messageKey">
#end
${indent}		<nobr><a id="buttonLink${action.name}" href="javascript:document.location=${link};" class="buttonLink" ><s:property value="%{getText('$action.messageKey')}" /></a></nobr>
#end
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	</security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}</security:containsOperationMode>
#end
#end
##
##
#macro (renderTableLookupGrid2 $action $indent $rowIndex)
##
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set($beanName="row")
#set($uriQuery='')
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#if ($action.popup)
#set($delim = "?")
#foreach ($parameter in $action.actionParameters)
#set($paramValue="${beanName}.${parameter.name}")#set($uriQuery="${uriQuery}${delim}${parameter.name}=${${paramValue}}")#set($delim='&')
#end
#else
#set($linkParameters="")
#set($delim = " ")
#set($fieldLinkValue = $action.findTaggedValue("$fieldLink"))
#set($i = 0)
#foreach ($parameter in $action.actionParameters)
#set($linkParameters="${${beanName}.${parameter.name}}")
#set($param = $action.getFieldLinkAsList().get($i))
#set($teste = "var param${i} = window.parent.opener.document.getElementsByName('$param');if(param${i}[0] != null){param${i}[0].value = '${linkParameters}'}")
#set($delim = "${delim}${teste}")
#set($i = $i + 1)
#end
#end
## properly add a suffix when that last entry was an updateable field so the javascript does not have
## an unclosed literal
#set ($valueConfirmMessage = "")
#set ($valueConfirmMessage = $action.findTaggedValue("$confirmMessage"))
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	<security:containsPermission name="$action.imageMessageKey">
#end

#if ($action.popup)
${indent}		<nobr><a href="javascript:setaLocation('${action.actionPath}','${uriQuery}');window.close()" class="buttonLink btn-close"><s:property value="%{getText('$action.messageKey')}" /></a></nobr>
#else
${indent}		<nobr><a href="javascript:${delim};window.close()" class="buttonLink btn-close"><s:property value="%{getText('$action.messageKey')}" /></a></nobr>
#end

#if ($securityEnabled && !${action.useCase.openAccess}) 
${indent}	</security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}</security:containsOperationMode>
#end
#end
#macro (renderLookupGrid2 $action)
#set ($messageKey = $action.messageKey)
#set ($trigger = $action.actionTrigger)
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set ($roles = $action.actionRoles)
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#set ($valueConfirmMessage = $action.findTaggedValue("$confirmMessage"))
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess})
		<security:containsPermission name="$trigger.triggerKey">
#end
			<input class="btn btn-small btn-primary"id="lookupGrid${action.actionName.replace(' ','')}"name="${action.actionName}" value="<s:property value="%{getText('$trigger.triggerKey')}" />""  type="button" /> 
#if ($securityEnabled && !${action.useCase.openAccess})
		</security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
	</security:containsOperationMode>
#end
#if ($action.resettable)
	<s:reset id="reset${action.actionName.replace(' ','')}" value="%{getText('$trigger.resetMessageKey')}"/> 
#end
#end
##
##
##      Esta macro foi criada por Milene Fiorio e Rodrigo Castilho
##      Esta macro renderiza os botï¿½es de uma pagina
##
##
#macro ( renderFormButtonsCustomizado2 $action $indent )
#set ($messageKey = $action.messageKey)
#set ($trigger = $action.actionTrigger)
###set($useCaseName = $action.useCase.name)
#set($useCaseName = "${action.useCase.package.webModuleName}${action.useCase.actionPath}.action")
#set ($roles = $action.actionRoles)
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
#set ($valueConfirmMessage = $action.findTaggedValue("$confirmMessage"))
###if ($securityEnabled)
##${indent}<logic:present role="$roles">
###end
#set($valueOperationMode = "")
#set($valueOperationMode = $action.findTaggedValue("$operationMode"))
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}<security:containsOperationMode value="$valueOperationMode" useCase="${useCaseName}">
#end
#if ($securityEnabled && !${action.useCase.openAccess})
${indent}	<security:containsPermission name="$trigger.triggerKey">
#end
${indent}		<input id="${action.actionName.toString().replace(' ','')}" class="btn btn-primary" name="${action.actionName.toString().replace(' ','')}" value="<s:property value="%{getText('$trigger.triggerKey')}" />" type="button"/>
#if ($securityEnabled && !${action.useCase.openAccess})
${indent}	</security:containsPermission>
#end
#if( $valueOperationMode != "" && !${action.useCase.openAccess})
${indent}</security:containsOperationMode>
#end
#if ($action.resettable)
${indent}<input id="reset${action.actionName.toString().replace(' ','')}" class="btn btn-primary" type="button" name="${action.actionName}" value="<s:property value="%{getText('$trigger.triggerKey')}" />" />
#end
###if ($securityEnabled)
##${indent}</logic:present>
##${indent}<logic:notPresent role="$roles">
##${indent}   <security:containsPermission name="$trigger.triggerKey">
##${indent}   <html:button #if($hints)onmouseover="hints.show('${trigger.name}_no')" onmouseout="hints.hide()"#end disabled="true" styleId="form_submit" onclick="setaAcao('${action.actionPath}', '${action.formValidationMethodName}', ${action.validationRequired})" property="${action.actionName}">
##${indent}       <bean:message key="$trigger.triggerKey"/>
##${indent}   </html:button>
##${indent}   </security:containsPermission>
###if ($action.resettable)
##${indent}   <html:reset #if($hints)onmouseover="hints.show('${trigger.name}_noreset')" onmouseout="hints.hide()"#end disabled="true" styleId="form_reset">
##${indent}       <bean:message key="$trigger.resetMessageKey"/>
##${indent}   </html:reset>
###end
##${indent}</logic:notPresent>
##end
#end
##
##
##      This macro takes care of rendering the appropriate Struts tags
##      for the argument form field
####
#macro ( renderFormField2 $action $field $rowIndex $indent)
#set ($quote ='"')
#set ($fieldName = $field.name)
#set ($formBeanName = $action.useCase.formKey)## used to denote the request scope form
#if($field.fieldRowCount)#set($rowCount=" rows=$quote$field.fieldRowCount$quote")#else#set($rowCount='')#end
#if($field.fieldColumnCount)#set($columnCount=" size=$quote$field.fieldColumnCount$quote")#else#set($columnCount='')#end
#if($rowIndex=='')#set($beanName=$formBeanName)#else#set($beanName="row")#end
#set ($styleId = "$field.styleId$rowIndex")
#if($field.habilitadoPor || $field.readOnly)
#set ($disabled = 'disabled="true"')
#else
#set ($disabled = '')
#end
#if ($field.readOnly)
#set ($readonly = 'readonly="readonly"')
#else
#set ($readonly = '')
#end
##set($form="#session.")
#set ($propertyValue = "#session.${beanName}.${fieldName}")
#set($requiredness = ($clientValidation || $serverValidation))
#if ($requiredness && $field.required)
#set ($requiredLabel = " *")
#set ($requiredStyle = "required='true'")
#else
#set ($requiredLabel = "")
#set ($requiredStyle = "")
#end
#if ($field.type.dateType && $beanName=="row")
${indent}	<fmt:formatDate var="value" value="${${propertyValue}}" pattern="$field.dateFormat"/>
#else
${indent}	<s:set name="__value" value="${propertyValue}"/>
#end
##
##  Depending on the type of the input field we render a different widget
##
##
##      R A D I O B U T T O N
##
#if ($field.radioButton)
${indent}	<div id="div${field.name}${action.useCase.name}" class="radiobutton form-group">
${indent}		<label class="control-label col-sm-2"><bean:message key="$field.messageKey"/>$requiredLabel</label>
#if ($field.optionKeys.empty)
${indent}		<div>
${indent}				<s:radio id="${field.name}${action.useCase.name}" $requiredStyle cssClass="radio-inline" label="$field.name" name="$field.name" list="${propertyValue}ComboList" #if($field.type.enumeration) listValue="%{getText(value)}" #end value="__value" title="" />
${indent}		</div>
${indent}	</div>
#else
#set ($radioList = "#{")
#set ($comma = "")
${indent}		<div>
#foreach ($optionKey in $field.optionKeys)
#set ($optionIndex = $velocityCount - 1)
#if($optionIndex > 0)#set($comma = ",")#end
#if($field.type.isStringType())
#set ($radioList = "${radioList}${comma}'${optionIndex}' : getText('${optionKey}')")
#else
#set ($radioList = "${radioList}${comma}${optionIndex} : getText('${optionKey}')")
#end
#end
#set ($radioList = "${radioList}}")
${indent}				<s:radio id="${field.name}${action.useCase.name}" $requiredStyle cssClass="radio-inline" label="$field.name" name="$field.name" list="$radioList"  value="__value" title="" />
${indent}		</div>
${indent}	</div>
#end
##
##      C H E C K B O X
##
#elseif($field.checkbox)
${indent}	<div id="div${field.name}${action.useCase.name}" class="form-group checkbox">
${indent}		<div class="col-sm-offset-1 col-sm-10">
${indent}			<label>
${indent}				<input type="checkbox"  id="${field.name}${action.useCase.name}" $requiredStyle name="$fieldName" value="on" <c:if test="${__value}">checked="checked" </c:if> title=""  $disabled />
${indent}				<bean:message key="$field.messageKey"/>$requiredLabel
${indent}			</label>
${indent}		</div>
${indent}	</div>
##
##      M U L T I B O X
##
## @todo: disable this widget if not used in a row action
#elseif ($field.multibox)
${indent}	<div id="div${field.name}${action.useCase.name}" class="multibox form-group">
${indent}		<label class="control-labe col-sm-2"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div>
${indent}			<s:checkboxlist id="${field.name}${action.useCase.name}" $requiredStyle cssClass="form-control" name="$fieldName" list="#session.form.${field.name}List"#if($field.type.enumeration) listValue="%{getText(value)}" #end value="#session.form.${field.name}DefaultValue"/>
${indent}		</div>
${indent}	</div>
#elseif($field.custom)
${indent}	<div id="div${field.name}${action.useCase.name}" class="custom field">
${indent}		<%@ include file="${field.name}.jsp"  %>
${indent}	</div>
##
##     P A S S W O R D
##
#elseif( ($field.password) )
${indent}	<div id="div${field.name}${action.useCase.name}" class="password form-group">
${indent}		<label class="control-label col-sm-2"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div class="col-xs-4">
${indent}			<s:password id="${field.name}${action.useCase.name}" $requiredStyle cssClass="form-control" name="$fieldName" label="%{getText('$field.messageKey')}" value="%{${propertyValue}}" $disabled  title=""  $readonly $columnCount />
${indent}		</div>
${indent}	</div>
##      T E X T F I E L D       &       P A S S W O R D
##
#elseif( ($field.textField) && $field.calendarRequired )
${indent}	<div id="div${field.name}${action.useCase.name}" class="input-append date form-group" >
${indent}		<label class="control-label col-sm-2"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div class="col-xs-4">
${indent}			<input  class="form-control" type="text" id="${field.name}${action.useCase.name}" $requiredStyle value="<c:out value="${__value}"/>" $readonly data-date-format="dd/mm/yyyy" name="${fieldName}" size="80" />
${indent}		</div>
${indent}	</div>
##
##     A U T O C O M P L E TE
##
#elseif ($field.autocomplete)
${indent}	<div id="div${field.name}${action.useCase.name}" class="form-group autocomplete">
${indent}		<label class="control-label col-sm-2" for="${field.name}"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div class="col-xs-4">
${indent}			<s:textfield id="${field.name}${action.useCase.name}" $requiredStyle name="$fieldName" cssClass="form-control" label="%{getText('$field.messageKey')}"  value="%{$propertyValue}" $disabled  title=""  $readonly $columnCount styleId="$styleId"  />
${indent}		</div>
${indent}	</div>
#elseif (($field.textField) || ($field.editor))
${indent}	<div id="div${field.name}${action.useCase.name}" class="form-group textfield">
${indent}		<label class="control-label col-sm-2" for="${field.name}"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div class="col-xs-4">
${indent}			<s:textfield id="${field.name}${action.useCase.name}" $requiredStyle cssClass="form-control" name="$fieldName" label="%{getText('$field.messageKey')}" value="%{$propertyValue}" $disabled  title=""  $readonly $columnCount styleId="$styleId"  />
${indent}		</div>
${indent}	</div>
#elseif ($field.money)
${indent}	<div id="div${field.name}${action.useCase.name}" class="form-group money">
${indent}		<label class="control-label col-sm-2" for="${field.name}"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div class="col-xs-4">
${indent}			<input type="text" id="${field.name}${action.useCase.name}" $requiredStyle class="form-control" name="$fieldName" value="<c:out value="${__value}"/>" $disabled  title="" $readonly $columnCount styleId="$styleId" />
${indent}		</div>
${indent}	</div>
##
##      S E L E C T 2
##
#elseif ($field.select2)
${indent}	<div id="div${field.name}${action.useCase.name}" class="form-group select2">
${indent}		<label class="control-label col-sm-2" for="${field.name}"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div class="col-xs-4">
${indent}			<s:select id="${field.name}${action.useCase.name}" $requiredStyle cssClass="form-control select2-select" multiple="true" label="" name="${field.name}" listKey="key" listValue="%{getText(value)}" list="#session.form.${field.name}List" value="#session.form.${field.name}DefaultValue"/>
${indent}		</div>
${indent}	</div>
###elseif ($field.select2ajax)
##${indent}	<div id="div${field.name}${action.useCase.name}" class="form-group select2">
##${indent}		<label class="control-label col-sm-2" for="${field.name}"><bean:message key="$field.messageKey"/>$requiredLabel</label>
##${indent}		<div class="col-xs-4">
##${indent}			<input type="hidden" id="${field.name}${action.useCase.name}" $requiredStyle class="form-control" name="$fieldName" value="<c:out value="${__value}"/>" $disabled  title="" $readonly $columnCount styleId="$styleId" />
##${indent}		</div>
##${indent}	</div>
##
##      T E X T A R E A 
##
#elseif ($field.textArea || $field.editor)
${indent}	<div id="div${field.name}${action.useCase.name}" class="textarea form-group">
${indent}		<label class="control-label col-sm-2"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div class="col-xs-4">
${indent}			<textarea name="$fieldName" id="${field.name}${action.useCase.name}" $requiredStyle class="form-control"  $readonly $rowCount $columnCount $disabled id="${fieldName}${action.useCase.name}"><c:out value="${__value}"/></textarea>
${indent}		</div>
${indent}	</div>
##
##      M O N E Y
##
#elseif ($field.money)
${indent}	<div id="div${field.name}${action.useCase.name}" class="money form-group">
${indent}		<label class="control-label col-sm-2"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div class="col-xs-4">
${indent}			<input type="text" id="${field.name}${action.useCase.name}" $requiredStyle class="form-control" name="$fieldName" value="<c:out value="${__value}"/>" $disabled  $readonly $columnCount styleId="$styleId"/>
${indent}		</div>
${indent}	</div>
##
##      H I D D E N
##
#elseif ($field.hiddenField)
${indent}	<div id="div${field.name}${action.useCase.name}" class="hidden field">
${indent}		<label><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<input type="hidden" name="${field.name}" value="<c:out value="${__value}"/>" id="${field.name}${action.useCase.name}" $requiredStyle $disabled  />
${indent}	</div>
##
##      C O M B O B O X     &      L I S T
##
#elseif ($field.combobox)
${indent}	<div id="div${field.name}${action.useCase.name}" class="form-group combobox">
${indent}		<label class="control-label col-sm-2"><bean:message key="$field.messageKey"/>$requiredLabel</label>
#if ($field.readOnly)
#set ($disabled = 'disabled="true"')
#end
#if($field.multiple)
#set($multiple='multiple="multiple"')
#else
#set($multiple='')
#end
#if($field.type.collectionType)
#set($selectProperty="${fieldName}AsArray")
#else
#set($selectProperty="$fieldName")
#end
${indent}		<div class="col-xs-4">
${indent}			<s:select id="${field.name}${action.useCase.name}" $requiredStyle cssClass="form-control" label="" name="${field.name}" listKey="key" listValue="%{getText(value)}" list="${propertyValue}ComboList" value="__value"/>
${indent}		</div>
${indent}	</div>
##
##	D O U B L E   S E L E C T
##
#elseif ($field.doubleSelect)
${indent}	<div id="div${field.name}${action.useCase.name}" class="doubleSelect field">
${indent}		<label class="doubleSelectLabel"><bean:message key="$field.messageKey"/>$requiredLabel</label>
#if ($field.readOnly)
#set ($disabled = 'disabled="true"')
#end
#set($multiple='')
#set($selectProperty="$fieldName")
${indent}		<div class="col-xs-8">
${indent}			<s:doubleselect id="${field.name}${action.useCase.name}" $requiredStyle name="$selectProperty" list="#session.form.${field.name}Map.keySet()"
${indent}				listKey="value" listValue="label"
${indent}				doubleName="${selectProperty}__Double" doubleList="#session.form.${field.name}Map.get(top)"
${indent}				doubleListKey="value" doubleListValue="label" />
${indent}		</div>
${indent}	</div>
##
##      L I N K
##
#elseif ($field.hyperlink)
##foreach ($_action in $jsp.actions)
##if ($_action.hyperlink && $_action.findTaggedValue("$fieldLink"))
##set($fieldLinkValue = "")
##set($fieldLinkValue = $_action.findTaggedValue("$fieldLink"))
##if($fieldLinkValue.equals("$fieldName"))
#renderFieldHyperlink2($action $field "	")
##end
##end
##end
##
##      F I L E
##
#elseif ($field.file)
${indent}	<div id="div${field.name}${action.useCase.name}" class="file form-group">
${indent}		<label class="control-label col-sm-2"><bean:message key="$field.messageKey"/>$requiredLabel</label>
${indent}		<div class="col-xs-4">
${indent}			<s:file id="${field.name}${action.useCase.name}" $requiredStyle cssClass="form-control" name="$fieldName"  $disabled $columnCount styleId="$styleId"/>
${indent}		</div>
${indent}	</div>
##
##      P L A I N T E X T
##
#elseif ($field.strutsAction.tableLink)
## we could also test for widget type == 'plaintext', but that would be redundant here
${indent}	<div id="div${field.name}${action.useCase.name}" class="hidden field">
${indent}		<input id="${field.name}${action.useCase.name}" type="hidden" name="${field.name}" value="<c:out value="${__value}"/>" />
${indent}	</div>
#else
${indent}	<div id="div${field.name}${action.useCase.name}" class="exibir form-group">
${indent}		<label class="control-label col-sm-2"><bean:message key="$field.messageKey"/></label>
${indent}		<div class="col-xs-4">
${indent}			<p id="${field.name}${action.useCase.name}" class="form-control-static"><s:property value="%{getText($propertyValue)}" /></p>
${indent}		</div>
${indent}	</div>
#end
##${indent}<label id="$field.name"><c:out value="${__value}"/></label>
#end
#macro(cleanButton2 $action $indent)
#if($action.findTaggedValue("$cleanTable").equals("true"))
${indent}		<script type="text/javascript">
${indent}			function clean(){
${indent}				document.forms[0].reset();
${indent}				$parameters = $action.actionParameters;
${indent}				for($field in $parameters){
${indent}					if(!($field.select || $field.radioButton || $field.checkbox || $field.multibox ||$field.doubleSelect)){
${indent}						document.getElementById("$field.styleId").value="";
${indent}					}		
${indent}				}
${indent}			}
${indent}		</script>
${indent}
${indent}		<input id="clean${action.useCase.name}" class="btn btn-mini btn-clean" type="button" value="clean"><!--Clean()-->
#end
#end
