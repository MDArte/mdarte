#set ($generatedFile = "${stringUtils.replace($customTypesPackage,'.','/')}/${utilDir}/ExportGenerator.java")

#set ($package = "${stringUtils.replace($utilDir,'/','.')}")
package ${customTypesPackage}.${package};

import org.hibernate.Criteria;
import org.hibernate.ScrollabeResults;
import org.hibernate.ScrollMode;
import org.hibernate.Type;

import org.apache.poi.xssf.streaming.SXSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.util.HashMap;

public abstract class ExportExcel {
	
	private Criteria criteria;
	
	private String sheetName;
	
	private String[] columns;
	
	private ScrollableResults results = null;
	
	protected HashMap<String,XSSFCellStyle> styles = new HashMap<String,XSSFCellStyle> ();
	
	public ExcelGenerator(Criteria criteria, String sheetName, String[] columns) {
		this.criteria = criteria;
		this.sheetName = sheetName;
		this.columns = columns;
	}
	
	public Type getColumnType(int i) {
		return results.getType(i);
	}
	
	public int getCurrentRowNumber() {
		return results.getRowNumber();
	}
	
	private void columnsAutoResize(XSSFSheet sheet){
		for(int i = 0; i < columns.length; i++) {
			sheet.autoSizeColumn(i);
		}
	}
	
	public abstract void stylus(XSSFWorkbook workbook);
	
	public abstract void header(XSSFWorkbook workbook);
	
	public abstract void line(XSSFWorkbook workbook,XSSFSheet sheet, Object[] row);
	
	public XSSFWorkbook run(){
		
		XSSFWorkbook workbook = new XSSFWorkbook();
		
		XSSFSheet sheet = workbook.createSheet(sheetName);

		stylus(workbook);
		
		header(workbook);
		
		if(criteria != null) {
		
			results = criteria.scroll(ScrollMode.FORWARD_ONLY);
		
		}
		
		if(results != null) {
		
			results.beforeFirst();
		
			while(results.next()) {
			
				line(workbook, sheet, results.get());
			
			}
			
		}
		
		columnsAutoResize(sheet);
		
	}
	
}