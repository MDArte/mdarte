#set ($deployExploded = "false")
#if ($tomcat)
#set ($deployExploded = "true")
#end
# set this to true will deploy the $projectType exploded
deployExploded=$deployExploded

# habilita o empacotamento dos JARs das dependências no EAR da aplicação
packDependencies=true
# habilita o empacotamento dos WARs no EAR da aplicação
packWar=true

# The datasource for the application
dataSource.name=${projectId}DS
dataSource=java:/${dataSource.name}

# Properties for management of the database schema, 
# ignore if you setup/drop your schema manually
#if ($mysql)
dataSource.driver.jar=${env.JBOSS_HOME}/server/default/lib/mysql-connector-java-5.0.4-bin.jar
#elseif ($oracle)
dataSource.driver.jar=${env.JBOSS_HOME}/server/default/lib/ojdbc14.jar
#elseif ($postgres)
dataSource.driver.jar=${env.JBOSS_HOME}/server/default/lib/postgresql.jar
#else
dataSource.driver.jar=${env.JBOSS_HOME}/server/default/lib/hsqldb.jar
#end
#if ($mysql)
dataSource.driver.class=com.mysql.jdbc.Driver
#elseif ($oracle)
dataSource.driver.class=oracle.jdbc.driver.OracleDriver
#elseif ($postgres)
dataSource.driver.class=org.postgresql.Driver
#else
dataSource.driver.class=org.hsqldb.jdbcDriver
#end
#if ($mysql)
dataSource.url=jdbc:mysql://localhost:3306/${projectId}
#elseif ($oracle)
dataSource.url=jdbc:oracle:thin:@localhost:1521:yoursid
#elseif ($postgres)
dataSource.url=jdbc:postgresql://localhost/${projectId}
#else
dataSource.url=jdbc:hsqldb:hsql://127.0.0.1:1701
#end
dataSource.user=sa
dataSource.password=
dataSource.sql.init=core/cd/target/schema-create.sql
dataSource.sql.drop=core/cd/target/schema-drop.sql
dataSource.sql.load=core/cd/target/db/create-dummy-load.sql
# What schema related goals should do when an error occurs.
dataSource.sql.onError=continue

# Change this to generate to the correct MDA database mappings
# For MySql use: MySQL
# For Hypersonic use: HypersonicSql
# For Oracle9i use: Oracle9i
#if ($mysql)
sql.mappings=MySQL
#elseif ($oracle)
sql.mappings=Oracle9i
#elseif ($postgres)
sql.mappings=PostgreSQL
#else
sql.mappings=HypersonicSql
#end

#if ($hibernate || $spring)
#if ($hibernateVersion == "2")
# For MySql use: net.sf.hibernate.dialect.MySQLDialect
# For Hypersonic use: net.sf.hibernate.dialect.HSQLDialect
# For Oracle9i use: net.sf.hibernate.dialect.Oracle9Dialect
#if ($mysql)
hibernate.db.dialect=net.sf.hibernate.dialect.MySQLDialect
#elseif ($oracle)
hibernate.db.dialect=net.sf.hibernate.dialect.Oracle9Dialect
#elseif ($postgres)
hibernate.db.dialect=net.sf.hibernate.dialect.PostgreSQLDialect
#else
hibernate.db.dialect=net.sf.hibernate.dialect.HSQLDialect
#end
#else
# For MySql use: org.hibernate.dialect.MySQLDialect
# For Hypersonic use: org.hibernate.dialect.HSQLDialect
# For Oracle9i use: org.hibernate.dialect.Oracle9Dialect
#if ($mysql)
hibernate.db.dialect=org.hibernate.dialect.MySQLDialect
#elseif ($oracle)
hibernate.db.dialect=org.hibernate.dialect.Oracle9Dialect
#elseif ($postgres)
hibernate.db.dialect=org.hibernate.dialect.PostgreSQLDialect
#else
hibernate.db.dialect=org.hibernate.dialect.HSQLDialect
#end
#end
#end
#if ($ejb)

# Change this to the correct database type mappings (for Jboss)
#if ($mysql)
jboss.typeMappings=mySQL
#elseif ($oracle)
jboss.typeMappings=Oracle9i
#elseif ($postgres)
jboss.typeMappings=PostgreSQL
#else
jboss.typeMappings=Hypersonic SQL
#end
#end

#if ($mysql)
defaultHibernateGeneratorClass=native
#elseif ($oracle)
defaultHibernateGeneratorClass=sequence
#elseif ($postgres)
defaultHibernateGeneratorClass=sequence
#else
defaultHibernateGeneratorClass=sequence
#end