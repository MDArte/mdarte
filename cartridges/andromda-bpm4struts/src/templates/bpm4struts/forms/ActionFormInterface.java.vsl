#parse("templates/bpm4struts/forms/Form.java.vm")
#set ($generatedFile = "${operation.interfaceFullPath}.java")
#set ($hash = "#")
#set($gerar = false)
#if(${operation.controller.useCase.useCaseOldStruts})
#set($gerar = true)
#end
#if($gerar)
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: bpm4struts/forms/ActionFormInterface.java.vsl in andromda-bpm4struts-cartridge-coppetec.
//
package $operation.interfacePackageName;

/**
 * This form encapsulates the fields that are used in the execution of the
 * <code>$operation.name</code> method, which is located on the
 * <code>$operation.controller.fullyQualifiedName</code> controller.
 *
$operation.getDocumentation(" * ")
 *
 * @see ${operation.controller.fullyQualifiedName}${hash}${operation.name}
 */
public interface $operation.interfaceName
{
###foreach ($field in $operation.formFields)
#foreach ($field in $operation.interfaceFormFields)
#set ($fieldType = $field.type.fullyQualifiedName)
#set ($fieldName = $field.name)
#set ($tableActionFound = false)
#set ($optionField = false)
#if($field.strutsAction.tableAction)
#set($tableActionFound=true)
#else
#if($field.widgetType=="radio")
#set($optionField=$field)
#end
#end
#if ($field.doubleSelect)

	public $fieldType ${field.getterName}__Double();

	public void ${field.setterName}__Double($fieldType ${fieldName}__Double);

	public void ${field.setterName}Map(java.util.Map ${fieldName}Map,java.lang.String value, java.lang.String label, java.lang.String value2, java.lang.String label2);
#end
#if ($field.type.collectionType)
    /**
     * This field is a collection type, and this method allows you to set it into the form.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.setterName}AsArray(Object[])
     */
    public void ${field.setterName}($fieldType $fieldName);

    /**
     * This field is a collection type, and this method allows you to get it from the form.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.getterName}AsArray()
     */
    public $fieldType ${field.getterName}();

    /**
     * This field is a collection type, and this method allows you to set it as an
     * array into the form, conversion will be automatically performed.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.setterName}($fieldType)
     */
    public void ${field.setterName}AsArray(Object[] $fieldName);

    /**
     * This field is a collection type, and this method allows you to get it as an
     * array from the form, conversion will be automatically performed.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.getterName}()
     */
    public java.lang.Object[] ${field.getterName}AsArray();
#elseif($field.widgetType=="money")
#set ($asType = "Double")

	public void ${field.setterName}As${asType}(java.lang.Double $fieldName);

    public java.lang.Double ${field.getterName}As${asType}();

    public void ${field.setterName}(java.lang.String ${fieldName});

    public java.lang.String ${field.getterName}();
#elseif ($field.date || $field.time )
#if ($field.date)
#set ($asType = "Date")
#else
#set ($asType = "Time")
#end

    /**
     * This field is a date type, and this method allows you to set it into the form.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.setterName}(java.lang.String)
     */
    public void ${field.setterName}As${asType}($fieldType $fieldName);

    /**
     * This field is a date type, and this method allows you to get it from the form.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.getterName}()
     */
    public $fieldType ${field.getterName}As${asType}();

    /**
     * This field is a date type, and this method allows you to set it into the form as a String.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.setterName}As${asType}($fieldType)
     */
    public void ${field.setterName}(java.lang.String ${fieldName});

    /**
     * This field is a date type, and this method allows you to get it from the form as a String.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.getterName}As${asType}()
     */
    public java.lang.String ${field.getterName}();
#elseif ($field.type.mapType)

    /**
     * Sets the argument value for the specified key into the <code>$field.name</code> Map.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.setterName}(java.util.Map)
     */
    public void ${field.setterName}Value(java.lang.String key, java.lang.Object value);

    /**
     * Gets the argument value for the specified key from the <code>$field.name</code> Map.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.getterName}()
     */
    public java.lang.Object ${field.getterName}Value(java.lang.String key);

    /**
     * Sets the <code>$field.name</code> Map to the specified value.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.setterName}Value(java.lang.String key, java.lang.Object value)
     */
    public void ${field.setterName}(java.util.Map $fieldName);

    /**
     * Gets the <code>$field.name</code> Map.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.getterName}Value(java.lang.String)
     */
    public java.util.Map ${field.getterName}();
#elseif($field.type.enumeration)
#set($enumeration = $field.type)
#if ($enumeration.literalType.primitive)
#set($type = ${enumeration.literalType.wrapperName})
#else
#set($type = ${enumeration.literalType.fullyQualifiedName})
#end

    /**
     * Sets the <code>$field.name</code> field.
     *
$field.getDocumentation("     * ")
     */
    public void ${field.setterName}($type $fieldName);

    /**
     * Gets the <code>$field.name</code> field.
     *
$field.getDocumentation("     * ")
     */
    public ${enumeration.fullyQualifiedName} ${field.getterName}AsEnumeration();

	public $type ${field.getterName}();

#elseif ($field.file)
    /**
     * Sets the <code>$field.name</code> Struts FormFile field to the specified value.
     *
$field.getDocumentation("     * ")
     */
    public void ${field.setterName}(org.apache.struts.upload.FormFile ${field.name});


    /**
     * Gets the <code>$field.name</code> Struts FormFile field value.
     *
$field.getDocumentation("     * ")
     */
    public org.apache.struts.upload.FormFile ${field.getterName}();

##
##  if this field is used as a row selection parameter somewhere then we need to include that dedicated field too
##
#elseif ($tableActionFound)
#set ($fieldName = $field.name)
#if ($field.type.primitive)
#set ($fieldType = "$field.type.wrapperName")
#else
#set ($fieldType = "$field.type.fullyQualifiedName")
#end
#set ($accessSuffix = "RowSelection")

    /**
     * This field represents a selection of rows from the <em>$field.tableGlobalActionParameter.name</em> table
     * page-variable, this method allows you to set it into the form.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.setterName}${accessSuffix}AsArray(${fieldType}[])
     */
    public void ${field.setterName}${accessSuffix}(java.util.List $fieldName${accessSuffix});

    /**
     * This field represents a selection of rows from the <em>$field.tableGlobalActionParameter.name</em> table
     * page-variable, this method allows you to get it from the form.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.getterName}${accessSuffix}AsArray()
     */
    public java.util.List ${field.getterName}${accessSuffix}();

    /**
     * This field represents a selection of rows from the <em>$field.tableGlobalActionParameter.name</em> table
     * page-variable, this method allows you to set it as an array into the form, conversion will be
     * automatically performed.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.setterName}${accessSuffix}(java.util.List)
     */
    public void ${field.setterName}${accessSuffix}AsArray(${fieldType}[] $fieldName${accessSuffix});

    /**
     * This field represents a selection of rows from the <em>$field.tableGlobalActionParameter.name</em> table
     * page-variable, this method allows you to get it as an
     * array from the form, conversion will be automatically performed.
     *
$field.getDocumentation("     * ")
     *
     * @see ${hash}${field.getterName}${accessSuffix}()
     */
    public ${fieldType}[] ${field.getterName}${accessSuffix}AsArray();
#else

    /**
     * Sets the <code>$field.name</code> field.
     *
$field.getDocumentation("     * ")
     */
    public void ${field.setterName}($fieldType $fieldName);

    /**
     * Gets the <code>$field.name</code> field.
     *
$field.getDocumentation("     * ")
     */
    public $fieldType ${field.getterName}();

#if ($optionField)

    /**
     * Converts the selected option index to the corresponding value as it was modeled.
     * This method does not take i18n into account so it consistently returns the same value
     * given the same argument.
     */
    public $field.type.fullyQualifiedName ${field.getterName}OptionValue(int optionIndex);

#end
#end
    /**
     * Resets the <code>$field.name</code> field.
     */
    public void ${field.resetName}();

###if ($field.selectable)
#if (${field.widgetType}=="select" || $field.doubleSelect || $field.radio || ${field.widgetType}=="multibox")
#processListsInterface ($field ${operation.controller.useCase.useCaseOldStruts})
#end

###end
#end
}
#end
