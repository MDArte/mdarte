#set ($generatedFile = "${controller.fullPath}Impl.java")
##
##  CONSTANTS
##
#set ($quote = '"')
#set ($controllerPackageName = $controller.packageName)
#set ($controllerClassName = $controller.name)
#set ($useCase = $controller.useCase)
##
##  START TEMPLATE
##
#set($gerar = true)
#if(${controller.useCase.useCaseOldStruts})
#set($gerar = false)
#end

#if($gerar)
// license-header java merge-point
package $controllerPackageName;
#set ($package = "${stringUtils.replace($utilDir,'/','.')}")
import ${customTypesPackage}.${package}.Constantes;
import ${servletPackage}.ViewContainer;
import ${customTypesPackage}.${package}.PaginationStrategy;

/**
 * @see ${controllerPackageName}.${controllerClassName}
 */
public class ${controllerClassName}Impl extends ${controllerClassName}
{
#foreach ($operation in $controller.operations)
#set ($visibility = $operation.visibility)
#set ($returnType = $operation.returnType.fullyQualifiedName)
#if (!$returnType)
#set ($returnType = "void")
#end
    /**
     * @see ${controllerPackageName}.${controllerClassName}#${operation.name}($operation.interfaceType)
     */
    $visibility final $returnType ${operation.name}($operation.interfaceType form, ViewContainer container) throws Exception {
    	/*Caso seja necessario usar paginacao		
    		Integer pagina = ((Double)container.getAttribute(Constantes.PARAMETRO_PAGINA)).intValue();
			${customTypesPackage}.${package}.PaginationDisplaytag paginacao = new ${customTypesPackage}.${package}.PaginationDisplaytag(pagina);
		*/##acredito que essa parte talvez seja encapsulada num aspecto.
	
#set($allowDummyData = ($dummyData == 'true'))
#if ($allowDummyData)
#set ($formFields = $operation.formFields)
#if ($formFields.empty)
        // nothing to be done for this operation, there are no properties that can be set
#else
#foreach ($field in $formFields)
#set ($tableActionFound = false)
#foreach ($action in $operation.deferringActions)
#if($action.tableAction)#foreach($parameter in $action.actionParameters)#if($parameter.name==$field.name)#set($tableActionFound=true)#end#end#end
#end

#if ($field.table)
        // populating the table with a dummy list
        form.${field.setterName}(${field.name}DummyList);

#elseif ($field.date)
        // setting a date
        form.${field.setterName}AsDate($field.resetValue);
#elseif ($tableActionFound)
        // we don't set row selection parameters such as ${field.name}RowSelection
#elseif ($field.type.arrayType)
        // this property receives a default value, just to have the application running on dummy data
        form.${field.setterName}(($field.type.fullyQualifiedName) $field.resetValue);
#else
        // this property receives a default value, just to have the application running on dummy data
        form.${field.setterName}($field.resetValue);
#end
#if ($field.selectable)
#set ($valueListMethod = $stringUtils.capitalize($field.valueListName))
#set ($labelListMethod = $stringUtils.capitalize($field.labelListName))
        form.set${valueListMethod}($field.valueListResetValue);
        form.set${labelListMethod}(form.get${valueListMethod}());
#end
#end
#end
#end
#if ($returnType != "void")
#if ($returnType=="boolean")
        return false;
#elseif ($operation.returnType.primitive)
        return 0;
#else
        return null;
#end
#end
    }
#set ($returnType = false)

#end
#foreach($page in $controller.useCase.getPages())
#foreach($parameter in $page.allUniqueActionParameters)
#if($parameter.autocomplete)
#set($pageName = $parameter.name) 
#set($palavras = $parameter.getJsp().getName().split(" "))
#foreach($palavra in $palavras)
#set($aux=$palavra.subSequence(0,1).toUpperCase().concat("$palavra.substring(1)"))
#set($pageName = $pageName.concat("$aux"))
#end

	public final String[] ${pageName}AutoComplete(String query, ViewContainer container) throws Exception {
		return null;
	}
#end
#end
#foreach($parameter in $page.getPageVariables())
#if($parameter.tableType.equals("jtable"))
#set($tableName = $parameter.name.subSequence(0,1).toUpperCase().concat($parameter.name.substring(1)))
#set($actionAjax = "")
#set($palavras = ${parameter.getJsp().getName().split(" ")} )
#foreach($palavra in $palavras)
#set($aux=$palavra.subSequence(0,1).toUpperCase().concat($palavra.substring(1)))
#set($actionAjax = $actionAjax.concat("$aux"))
#end
#set($actionAjax=$actionAjax.concat($tableName))
#set($actions = $page.getActions())
	public final java.util.Collection load${actionAjax}Table(PaginationStrategy paginacao, String propriedade, Boolean desc, #foreach($action in $actions)#if($action.ajaxAction && $action.ajaxTable.equals($parameter.name))#foreach($param in $action.getActionParameters())#if($param.type.name.equalsIgnoreCase("integer") || $param.type.name.equalsIgnoreCase("Double") || $param.type.name.equalsIgnoreCase("Boolean")) $param.type.fullyQualifiedName #else String#end $param.name,#end#end#end ViewContainer container) throws Exception {
		return null;
	}
	
	public final Integer get${actionAjax}TableLength(PaginationStrategy paginacao, String propriedade, Boolean desc, #foreach($action in $actions)#if($action.ajaxAction && $action.ajaxTable.equals($parameter.name))#foreach($param in $action.getActionParameters())#if($param.type.name.equalsIgnoreCase("integer") || $param.type.name.equalsIgnoreCase("Double") || $param.type.name.equalsIgnoreCase("Boolean")) $param.type.fullyQualifiedName #else String#end $param.name,#end#end#end ViewContainer container) throws Exception {
		return null;
	}
#end
#end
#end
}
#end
