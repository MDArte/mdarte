#parse("templates/ejb/Globals.vm")
#set ($util = "${stringUtils.replace($utilDir,'/','.')}")
<?xml version="1.0" encoding="$xmlEncoding"?>
#if($ejb3 == 'false')
<!DOCTYPE ejb-jar PUBLIC "-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN"
                         "http://java.sun.com/dtd/ejb-jar_2_0.dtd">
#end
#macro (renderManipula $actionName $service $dependencia)
        <method-permission>
            <description><![CDATA[]]></description>
            <unchecked/>
            <method>
                <description><![CDATA[]]></description>
                <ejb-name>$service.name</ejb-name>
#set ($interface = "Local")
#if ($remoteView)
#set ($interface = "Remote")
#end
                <method-intf>$interface</method-intf>
                <method-name>${actionName}${dependencia.targetElement.name}</method-name>
                <method-params>
                    <method-param>${dependencia.targetElement.FullyQualifiedName}</method-param>
#if($actionName.equals("filter")||$actionName.equals("list")||$actionName.equals("export") ||$actionName.equals("import")) 
                    <method-param>${customTypesPackage}.${actionPackageName}.${stringUtils.capitalize($actionName)}Action</method-param>
#end
                </method-params>
            </method>
        </method-permission>
#end
#if($pacote)
#set($services = $pacote.sessions)
#set($messageBeans = $pacote.messageDrivenBeans)
#end
#if($ejb3 == 'true')
<ejb-jar xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:ejb="http://java.sun.com/xml/ns/javaee/ejb-jar_3_0.xsd"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/ejb-jar_3_0.xsd"
    version="3.0">
#else
<ejb-jar>
#end
    <description><![CDATA[No Description.]]></description>
    <display-name>Generated by AndroMDA EJB Cartridge</display-name>

    <enterprise-beans>

#foreach ($service in $services)
        <session>
            <description>
                <![CDATA[
                $service.getDocumentation("                ", 64, false)
                ]]>
            </description>
            <ejb-name>$service.name</ejb-name>
#if($ejb3 == 'true')
            <business-local>${service.fullyQualifiedName}Local</business-local>
            <business-remote>${service.fullyQualifiedName}</business-remote>
#else
            <home>${service.fullyQualifiedName}Home</home>
            <remote>${service.fullyQualifiedName}</remote>
            <local-home>${service.fullyQualifiedName}LocalHome</local-home>
            <local>${service.fullyQualifiedName}Local</local>
#end
            <ejb-class>${service.fullyQualifiedName}BeanImpl</ejb-class>
#if ($service.stateful)
            <session-type>Stateful</session-type>
#else
            <session-type>Stateless</session-type>
#end
            <transaction-type>Container</transaction-type>
#foreach ($serviceRef in $service.serviceReferences)
#set ($serviceRef = $serviceRef.targetElement)
#set ($ejbRefTag = "ejb-ref")
#if (!$serviceRef.remoteView)
#set ($ejbRefTag = "ejb-local-ref")
#end

            <$ejbRefTag>
                <ejb-ref-name>ejb/${serviceRef.name}Ref</ejb-ref-name>
                <ejb-ref-type>Session</ejb-ref-type>
                <home>${serviceRef.fullyQualifiedName}Home</home>
                <local-home>${serviceRef.fullyQualifiedName}LocalHome</local-home>
                <local>${service.fullyQualifiedName}Local</local>
                <remote>$service.fullyQualifiedName</remote>
                <ejb-link>$serviceRef.name</ejb-link>
            </$ejbRefTag>

#end
#if($service.hasStereotype("$webSrv") && !$service.jaxws)
            <service-endpoint>${service.fullyQualifiedName}Srv</service-endpoint>
#end
        </session>
#end
#if($modulo == 'false')
        <session>
            <ejb-name>UtilServiceHandler</ejb-name>
            <home>${customTypesPackage}.UtilServiceHandlerHome</home>
            <local-home>${customTypesPackage}.UtilServiceHandlerLocalHome</local-home>
            <local>${customTypesPackage}.UtilServiceHandlerLocal</local>
            <remote>${customTypesPackage}.UtilServiceHandler</remote>
            <ejb-class>${customTypesPackage}.UtilServiceHandlerBeanImpl</ejb-class>
            <session-type>Stateless</session-type>
            <transaction-type>Container</transaction-type>
        </session>
#end
#foreach ($messageBean in $messageBeans)
    <message-driven>
        <ejb-name>$messageBean.name</ejb-name>
        <ejb-class>${messageBean.fullyQualifiedName}BeanImpl</ejb-class>
        <transaction-type>Container</transaction-type>
        <acknowledge-mode>AUTO_ACKNOWLEDGE</acknowledge-mode>
        <message-driven-destination>
            <destination-type>javax.jms.Queue</destination-type>
        </message-driven-destination>
    </message-driven>
#end
    </enterprise-beans>

    <assembly-descriptor>

##if ($ejbSecurityEnabled)
##foreach ($role in $hibernateUtils.getAllRoles($services))
##        <security-role>
##            <description><![CDATA[$role.getDocumentation("", -1, false)]]></description>
##            <role-name>$role.name</role-name>
##        </security-role>

###end
###end
#foreach ($service in $services)

#set($generalizations = $service.allGeneralizations)

#set($operations = $service.operations)

#foreach($generalization in $generalizations)
#set($var = $operations.addAll($generalization.operations))
#end
#foreach ($operation in $operations)
        <method-permission>
            <description><![CDATA[$operation.signature security constraint]]></description>
##if (!$ejbSecurityEnabled || $operation.roles.empty)
#if (!$ejbSecurityEnabled || $service.roles.empty)
            <unchecked/>
#else
###foreach ($role in $operation.roles)
##            <role-name>$role.name</role-name>
###end
#end
            <method>
                <description><![CDATA[$operation.getDocumentation("", -1, false)]]></description>
                <ejb-name>$service.name</ejb-name>
#set ($interface = "Local")
#if ($remoteView)
#set ($interface = "Remote")
#end
                <method-intf>$interface</method-intf>
                <method-name>$operation.name</method-name>
#if (!$operation.arguments.empty)
                <method-params>
#foreach ($argument in $operation.arguments)
#set($argument = $argument.type.fullyQualifiedName)
#if($service.hasStereotype("$webSrv") && $stringUtils.indexOf("$argument", "$modelPackageName") > 0)
#set($argument = $stringUtils.replace("${argument}", "$modelPackageName", "$wsdPackageName"))
#set($argument = $argument.concat("WS"))
#end
                    <method-param>$argument</method-param>
#end
                </method-params>
#end
            </method>
        </method-permission>
#if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )
        <method-permission>
            <description><![CDATA[$operation.signature security constraint]]></description>
            <unchecked/>
            <method>
                <description><![CDATA[$operation.getDocumentation("", -1, false)]]></description>
                <ejb-name>$service.name</ejb-name>
#set ($interface = "Local")
#if ($remoteView)
#set ($interface = "Remote")
#end
                <method-intf>$interface</method-intf>
                <method-name>$operation.name</method-name>
#if (!$operation.arguments.empty)

                <method-params>
#foreach ($argument in $operation.arguments)
#set($argument = $argument.type.fullyQualifiedName)
#if($service.hasStereotype("$webSrv") && $stringUtils.indexOf("$argument", "$modelPackageName") > 0)
#set($argument = $stringUtils.replace("${argument}", "$modelPackageName", "$wsdPackageName"))
#set($argument = $argument.concat("WS"))
#end
                    <method-param>$argument</method-param>
#end
	            <method-param>${customTypesPackage}.${util}.PaginationStrategy</method-param>
                </method-params>
#end
            </method>
        </method-permission>
#end

#end
#foreach ($dependencia in $service.sourceDependencies)
#if($dependencia.targetElement.FullyQualifiedName.indexOf(".${modelPackageName}.") > 0)

<method-permission>
            <description><![CDATA[]]></description>
            <unchecked/>
            <method>
                <description><![CDATA[]]></description>
                <ejb-name>$service.name</ejb-name>
#set ($interface = "Local")
#if ($remoteView)
#set ($interface = "Remote")
#end
                <method-intf>$interface</method-intf>
                <method-name>manipula${dependencia.targetElement.name}</method-name>
                <method-params>
                    <method-param>${dependencia.targetElement.FullyQualifiedName}</method-param>
                    <method-param>${customTypesPackage}.${actionPackageName}.Action</method-param>
                </method-params>
            </method>
        </method-permission>

#if($ejbSecurityEnabled)
#renderManipula("delete" $service $dependencia)
#renderManipula("filter" $service $dependencia)
#renderManipula("insert" $service $dependencia)
#renderManipula("insertOrUpdate" $service $dependencia)
#renderManipula("list" $service $dependencia)
#renderManipula("select" $service $dependencia)
#renderManipula("update" $service $dependencia)
#renderManipula("export" $service $dependencia)
#renderManipula("import" $service $dependencia)
#end
#end
#end
#end
#foreach ($service in $services)

        <container-transaction>
            <method>
                <ejb-name>$service.name</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>$service.transactionType</trans-attribute>
        </container-transaction>

#set($generalizations = $service.allGeneralizations)
#set($operations = $service.operations)
#foreach($generalization in $generalizations)
#set($var = $operations.addAll($generalization.operations))
#end


#foreach ($operation in $operations)
#if($operation.transactionType)
       <container-transaction>
            <method>
                <ejb-name>$service.name</ejb-name>
                <method-name>$operation.name</method-name>
                <method-params>
#foreach ($argument in $operation.arguments)
                    <method-param>$argument.type.fullyQualifiedName</method-param>
#end
                </method-params>
            </method>
            <trans-attribute>$operation.transactionType</trans-attribute>
        </container-transaction>
#end
#end
#end

#foreach ($messageBean in $messageBeans)

        <container-transaction>
            <method>
                <ejb-name>$messageBean.name</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
#end

#if ($ejb3 == 'true' && $ejbSecurityEnabled)
#foreach ($service in $services)
#if (!$service.hasStereotype("$webSrv") && !${service.openAccess})
        <interceptor-binding>
            <ejb-name>$service.name</ejb-name>
            <interceptor-class>accessControl.SecurityInterceptor</interceptor-class>
        </interceptor-binding>
#end
#end
#end
    </assembly-descriptor>
</ejb-jar>

