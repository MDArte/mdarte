#if($parameter.getJsp().oldStruts && $parameter.tableType.equals("jtable"))
#parse("templates/bpm4struts/actions/Action.java.vm")
#set($tableName = $parameter.name.subSequence(0,1).toUpperCase().concat("$parameter.name.substring(1)") )
#set($actionName= "")
#set($palavras = ${parameter.getJsp().getName().split(" ")})
#foreach($palavra in $palavras)
#set($aux=$palavra.subSequence(0,1).toUpperCase().concat("$palavra.substring(1)"))
#set($actionName = $actionName.concat("$aux"))
#end
#set($actionName=$actionName.concat($tableName))
#set($path = ${parameter.getJsp().getUseCase().getPackagePath()})
#set($package=$path.replace('/','.'))
#set($generatedFile = "${path}/${actionName}Ajax.java")
#set($controllerClass = ${parameter.getJsp().getUseCase().getController()})
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: bpm4struts2/actions/TableAjaxAction.java.vsl in andromda-bpm4struts-cartridge-coppetec.
//

package ${package};

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts2.interceptor.ServletRequestAware;
import org.apache.struts2.interceptor.ServletResponseAware;
import org.apache.struts2.ServletActionContext;
import java.util.ArrayList;
import java.util.Iterator;
import java.io.PrintWriter;
import ${servletPackage}.ActionUtil;
#if ($securityEnabled && !${action.useCase.openAccess})
import ${controleAcessoDir}.LoginControllerFactory;
#end
import com.opensymphony.xwork2.ActionSupport;
#set ($utilPackage = "${stringUtils.replace($utilDir,'/','.')}")
import ${customTypesPackage}.${utilPackage}.Constantes;
import ${parameter.getJsp().getUseCase().getController().fullyQualifiedName}Factory;


#if ($securityEnabled && !${action.useCase.openAccess}) 
public final class ${actionName}Ajax extends ${controleAcessoDir}.Login
{
	public org.apache.struts.action.ActionForward particularExecute(org.apache.struts.action.ActionMapping mapping, org.apache.struts.action.ActionForm form, javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.lang.Exception {
#else
public final class ${actionName}Ajax extends org.apache.struts.action.Action
{
	protected String __casoDeUso = "${parameter.getJsp().getUseCase().getName()}";
	protected String __urlCasoDeUso = "/${parameter.getJsp().getUseCase().getName()}/${actionName}Ajax.action";
	protected String __modulo = "${parameter.getJsp().getUseCase().package.webModuleName}";
	protected String __contexto = "$stringUtils.replaceOnce(${parameter.getJsp().getUseCase().package.contexto}, ${contextoPrincipal}, "")";

	public org.apache.struts.action.ActionForward execute(org.apache.struts.action.ActionMapping mapping, org.apache.struts.action.ActionForm form, javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.lang.Exception {
#end		
		org.apache.struts.action.ActionForward forward = null;
		String redirect = "";
		request.getSession().setAttribute("form", null);
		
				
		boolean copyParameters = true;
		if (request.getSession().getAttribute(Constantes.COPY_PARAMETERS) != null) {
			copyParameters = (Boolean) request.getSession().getAttribute(Constantes.COPY_PARAMETERS);
			request.getSession().removeAttribute(Constantes.COPY_PARAMETERS);
		}
		
		forward = _loadTable(mapping,form,request,response);

		request.removeAttribute("$forwardKey");
		request.removeAttribute("$forwardKeyModule");
		
		return forward;
		
	}
	
	private org.apache.struts.action.ActionForward _loadTable(org.apache.struts.action.ActionMapping mapping, org.apache.struts.action.ActionForm form, javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.lang.Exception
	{
		org.apache.struts.action.ActionForward forward = null;
#set($palavras = $parameter.getJsp().getName().split(" "))
#set($method=${parameter.name})
#foreach($palavra in $palavras)
#set($aux=$palavra.subSequence(0,1).toUpperCase().concat("$palavra.substring(1)"))
#set($method=$method.concat("$aux"))
#end
		${package}.${controllerClass.name}Factory.get${controllerClass.name}Instance().load${actionName}Table(request,response);
		
		return forward;
	}

	public void loadUseCaseInfo()
	{
		__casoDeUso = "${parameter.getJsp().getUseCase().getName()}";
		__urlCasoDeUso = "/${parameter.getJsp().getUseCase().getName()}/${actionName}Ajax.action";
		__modulo = "${parameter.getJsp().getUseCase().package.webModuleName}";
		__contexto = "$stringUtils.replaceOnce(${parameter.getJsp().getUseCase().package.contexto}, ${contextoPrincipal}, "")";
	}
}
#end