#set($generatedFile = "${package.name}/maven.xml")
##
<project default="ejb:install"
         xmlns:ant="jelly:ant"
         xmlns:u="jelly:util"
         xmlns:maven="jelly:maven"
         xmlns:j="jelly:core">

#set($open = "${")
#set($end = "}")
##
    <ant:property environment="env"/>

    <j:set var="libDirectory" value="${env.JBOSS_HOME}/server/${jboss.config}/lib"/>

    <goal name="lib">
        <j:forEach var="dep" items="${open}pom.dependencies${end}">
            <j:if test= "${open}dep.getProperty('application.dependency') == 'true'${end}">
                <ant:delete includeEmptyDirs="false">
                    <ant:fileset dir="${open}libDirectory${end}">
                        <ant:include name="${open}dep.artifactId${end}*.${open}dep.type${end}"/>
                    </ant:fileset>
                </ant:delete>
                <ant:copy todir="${open}libDirectory${end}">
                    <fileset dir="${open}user.home${end}/.maven/repository/${open}dep.groupId${end}/${open}dep.type${end}s/">
                        <include name="${open}dep.artifact${end}"/>
                    </fileset>
                </ant:copy>
            </j:if>
        </j:forEach>
    </goal>

    <j:set var="deployDirectory" value="${env.JBOSS_HOME}/server/${jboss.config}/deploy"/>

    <goal name="deploy" prereqs="undeploy">
        <ant:copy file="${user.home}/.maven/repository/${pom.groupId}/ejbs/${pom.artifactId}-${pom.CurrentVersion}.jar"
            tofile="${deployDirectory}/${pom.artifactId}-${pom.CurrentVersion}.jar"/>
    </goal>

    <goal name="undeploy">
        <ant:delete includeEmptyDirs="true">
            <ant:fileset dir="${deployDirectory}">
                <ant:include name="${pom.artifactId}*.jar"/>
            </ant:fileset>
        </ant:delete>
    </goal>

    <preGoal name="ejb:ejb">
        <ant:property name="core.dir" value="$${open}basedir${end}/../../"/>
            <ant:property name="modulo.dir" value="${open}basedir${end}"/>
        <ant:property name="webservices.dir" value="${open}basedir${end}/target/src"/>

        <ant:path id="core.classpath">
            <ant:path refid="maven.dependency.classpath"/>
            <ant:path location="${maven.build.dest}"/>
        </ant:path>

        <ant:mkdir dir="${modulo.dir}/target/classes"/>
        <ant:mkdir dir="${modulo.dir}/target/src"/>
        <ant:mkdir dir="${modulo.dir}/src/java"/>

        <ant:path id="compile.ws">
            <ant:pathelement path="${modulo.dir}/target/src"/>
            <ant:pathelement path="${modulo.dir}/src/java"/>
        </ant:path>

        <ant:javac destdir="${modulo.dir}/target/classes" includes="**/*.java" excludes="**/*BeanImpl.java" debug="on">
            <ant:src>
                <ant:path refid="compile.ws"/>
            </ant:src>
            <ant:classpath>
                <ant:path refid="maven.dependency.classpath"/>
            </ant:classpath>
        </ant:javac>
#if($ejb3 == 'false' && $package.webServiceModule)
        <ant:taskdef name="wscompile" classname="com.sun.xml.rpc.tools.ant.Wscompile">
            <ant:classpath>
                <ant:path refid="maven.dependency.classpath"/>
            </ant:classpath>
        </ant:taskdef>

        <!--java classname="com.sun.xml.rpc.tools.ant.Wscompile" -->
    
        <ant:mkdir dir="${webservices.dir}/META-INF/wsdl"/>
    
        <u:available file="${webservices.dir}/config.xml">
            <ant:wscompile mapping="${webservices.dir}/META-INF/${stringUtils.capitalize("${package.name}")}Handler-mapping.xml" both="true" base="${modulo.dir}/target/classes" verbose="true" features="documentliteral"
                config="${webservices.dir}/config.xml" fork="true" nonClassDir="${webservices.dir}/META-INF/wsdl" classpath="./">
                <ant:classpath refid="core.classpath" />
            </ant:wscompile>
        </u:available>

        <fileScanner var="scanner">
            <fileset dir="target/src" includes="config-*.xml"/>
        </fileScanner>

        <j:forEach var="script" items="${scanner.iterator()}">
            <ant:wscompile  client="true" base="target/classes" verbose="true" 
                config="${script}" fork="true" classpath="./">
                <ant:classpath refid="core.classpath" />
            </ant:wscompile>
        </j:forEach>
#end

        <ant:javac destdir="${modulo.dir}/target/classes" includes="**/*BeanImpl.java" debug="on">
            <ant:src>
                <ant:path refid="compile.ws"/>
            </ant:src>
            <ant:classpath>
                <ant:path refid="maven.dependency.classpath"/>
            </ant:classpath>
        </ant:javac>
        <ant:copy todir="${modulo.dir}/target/classes">
            <ant:fileset dir="${modulo.dir}/target/src/" excludes="**/*.java"/>
        </ant:copy>

    </preGoal>

    <goal name="earInstall">
        <j:set var="earDirectory" value="${open}basedir${end}/../../../target/ear"/>

		<!-- JBoss EAP 6.1 Deprecated
        <j:if test="${open}packDependencies${end}">
            <j:forEach var="dep" items="${open}pom.dependencies${end}">
                <j:if test="${open}dep.getProperty('application.dependency') == 'true'${end}">
                    <ant:copy todir="${open}earDirectory${end}">
                        <fileset dir="${open}maven.repo.local${end}/${open}dep.groupId${end}/${open}dep.type${end}s/">
                            <include name="$${open}dep.artifact${end}" />
                        </fileset>
                    </ant:copy>
                </j:if>
            </j:forEach>
        </j:if>
        -->

        <ant:copy file="${maven.repo.local}/${pom.groupId}/ejbs/${pom.artifactId}-${pom.CurrentVersion}.jar"
            tofile="${earDirectory}/${pom.artifactId}-${pom.CurrentVersion}.jar"/>

        <!-- Gera trecho do arquivo application.xml -->
        <j:set var="earTempDirectory" value="${open}basedir${end}/../../../target/ear/temp"/>
        <j:file name="${earTempDirectory}/ejb-${package.name}.xml"
            outputMode="xml"
            omitXmlDeclaration="true"
            escapeText="false"
            trim="false"><![CDATA[
    <module>
        <ejb>${pom.artifactId}-${pom.CurrentVersion}.jar</ejb>
    </module>]]></j:file>

		<!-- JBoss EAP 6.1 -->
    	<!-- Gera trecho do arquivo jboss-deployment-structure.xml -->
        <j:set var="earTempDirectory" value="${basedir}/../../target/ear/temp"/>
        <j:file name="${earTempDirectory}/jboss-deployment-structure-ejb-${package.name}.xml"
            outputMode="xml"
            omitXmlDeclaration="true"
            escapeText="false"
            trim="false"><![CDATA[
    <sub-deployment name="${pom.artifactId}${artifactIdSuffix}-${pom.CurrentVersion}.jar">
    	<dependencies>
      		<module name="br.mdarte" />
		</dependencies>
		<local-last value="true" />
	</sub-deployment>]]></j:file>
    </goal>

    <!-- ==================================================================
           Shows help
         ================================================================== -->
    <goal name="help">
        <ant:echo>

maven ejb:install - Compila o conteudo deste modulo e gera o jar (e o default desta pasta)

maven deploy - Copia o jar deste modulo para o seu JBoss

maven clean - Apaga o conteudo da pasta target 

        </ant:echo>
    </goal>

    <!-- ==================================================================
           Cleans Everything and deletes all implementation classes
         ================================================================== -->
    <goal name="nuke">
        <ant:delete>
            <fileset dir="src/java">
                <include name="**/*Impl.java"/>
            </fileset>
        </ant:delete>
        <attainGoal name="clean"/>
    </goal>
</project>