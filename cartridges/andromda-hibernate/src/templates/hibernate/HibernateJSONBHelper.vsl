#set ($className = "HibernateJSONBHelper")
#set ($generatedFile = "$stringUtils.replace($userTypesPackage, '.', '/')/${className}.java")
package $userTypesPackage;

import java.io.StringReader;
import java.util.HashMap;
import java.util.Map;

import javax.json.Json;
import javax.json.stream.JsonParser;
import javax.json.stream.JsonParser.Event;


public class $className {
	
	public static boolean isObject(Event event){
		return event == Event.START_OBJECT;
	}
	
	public static boolean isArray(Event event){
		return event == Event.START_ARRAY;
	}
	
	public static boolean isValue(Event event) {
		
		return !(event == Event.START_ARRAY) && 
				!(event == Event.START_OBJECT) &&
				!(event == Event.END_ARRAY) &&
				!(event == Event.END_OBJECT) &&
				!(event == Event.KEY_NAME);
	}
	
	public static Map<String, String> parseJSONObjectToMap(String json) {
		Map<String,String> map = new HashMap<String,String>();
		
		JsonParser parser = Json.createParser(new StringReader(json));

		if(isObject(parser.next())) {
			
			while(parser.hasNext()){
				Event firstEvent = parser.next();
				
				if(firstEvent == Event.KEY_NAME) {
					String key = parser.getString();
					
					System.out.println("Key: "+key);
					
					Event secondEvent = parser.next();
					
					if(isValue(secondEvent)) {
						String value = new String();
						
						if((secondEvent == Event.VALUE_STRING) || (secondEvent == Event.VALUE_NUMBER)) {
							value = parser.getString();
						} else if(secondEvent == Event.VALUE_TRUE) {
							value = "true";
						} else if(secondEvent == Event.VALUE_FALSE) {
							value = "false";
						} else
							value = null;
						
						map.put(key, value);
					}
				}
			}	
		} else {
			return null;
		}
		
		return map;
	}
	
/*	public static ArrayList<Map<String,String>> parseJSONArrayToArrayList(String json) {
		ArrayList<Map<String,String>> list = new ArrayList<Map<String,String>>();

		if(!isArray(json)){
			return null;
		} else {
			json = json.substring(1,json.length()-2);
			
			String[] elements = json.split(",");
			
			for(int i = 0; i < elements.length; i++) {
				Map<String,String> object = parseJSONObjectToMap(elements[i]);
				list.add(object);
			}
		}
		
		return list;
	} */
}